<?xml version="1.0"?>
<rss version="2.0">  <channel>
    <title>Zheng Yaotian</title>
    <link>http://zhengyaotian.com</link>
    <pubDate>06 Jan 14 20:34 CST</pubDate>
    <item>
      <title>golang的另一个框架 martini 马提尼 (未完)</title>
      <link>http://zhengyaotian.com/golang/golang%E7%9A%84%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%A1%86%E6%9E%B6-martini-%E9%A9%AC%E6%8F%90%E5%B0%BC-%28%E6%9C%AA%E5%AE%8C%29/</link>
      <pubDate>2013-12-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;马提尼，是种好酒，以此给一个框架命名，为何？让我们了解一下这个框架&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;初步了解&#34; href=&#34;#初步了解&#34;&gt;&lt;/a&gt;初步了解&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;server.go&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    package main&#xA;&#xA;    import &amp;quot;github.com/codegangsta/martini&amp;quot;&#xA;&#xA;    func main() {&#xA;      m := martini.Classic()&#xA;      m.Get(&amp;quot;/&amp;quot;, func() string {&#xA;        return &amp;quot;Hello world!&amp;quot;&#xA;      })&#xA;      m.Run()&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;特色&#34; href=&#34;#特色&#34;&gt;&lt;/a&gt;特色&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;和 http.HandleFunc interface完全兼容&lt;/li&gt;&#xA;&lt;li&gt;和其它的golang package能很好的工作&lt;/li&gt;&#xA;&lt;li&gt;Non-intrusive design&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;classic-martini&#34; href=&#34;#classic-martini&#34;&gt;&lt;/a&gt;Classic Martini&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>深入了解docker关键技术(未完)</title>
      <link>http://zhengyaotian.com/Cloud/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3docker%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF%28%E6%9C%AA%E5%AE%8C%29/</link>
      <pubDate>2013-12-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;好处&#34; href=&#34;#好处&#34;&gt;&lt;/a&gt;好处&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;关键技术&#34; href=&#34;#关键技术&#34;&gt;&lt;/a&gt;关键技术&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;Linux Container&lt;/h3&gt;&#xA;&#xA;&lt;h3&gt;AUFS&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Aufs 另一个 unionfs. 版本 20090126&#xA;Aufs是一个类似于Unionfs的可堆叠联合文件系统，它将多个目录整合成单一的目录&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;成功案例&#34; href=&#34;#成功案例&#34;&gt;&lt;/a&gt;成功案例&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;openshift开始支持&#xA;openstack开始支持&#xA;google的computer engine开始支持&#xA;baidu用来做从写他们的PaaS&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;目前存在的问题&#34; href=&#34;#目前存在的问题&#34;&gt;&lt;/a&gt;目前存在的问题&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;docker目前缺少了三个功能：磁盘限制、网络限制、从宿主机到container执行命令? warden 里面有这些实现?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;container与宿主机共享同一内核，安全问题是一大隐患。目前各家做法不同，尚没有特别完善的方案。openshift采用SELinux；dotcloud用grsec打上内核补丁；stackato用的apparmor； ubuntu正在努力用apparmor解决lxc安全问题，http://t.cn/zQCdsD9&lt;/p&gt;&#xA;&#xA;&lt;p&gt;warden是比较完备的container方案； docker目前刚起步，还欠缺一些功能，例如磁盘限制和网络限制；两者共同的问题是都只能跑在 ubuntu上，对centos不够。主要原因是要利用 ubuntu 的 AUFS； docker目前正在往 BTRFS上移植，值得期待&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>建立自己的私有docker repository</title>
      <link>http://zhengyaotian.com/Cloud/%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89docker-repository/</link>
      <pubDate>2013-12-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;安装并运行docker-repositroy&#34; href=&#34;#安装并运行docker-repositroy&#34;&gt;&lt;/a&gt;安装并运行docker repositroy&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  git clone https://github.com/dotcloud/docker-registry&#xA;  cd docker-registry/config&#xA;  cp config_sample.yml config.yml&#xA;  vi config.yml&#xA;&#xA;&#xA;        # This is the default configuration when no flavor is specified&#xA;        dev:&#xA;            storage: local&#xA;            storage_path: /home/vagrant/registry&#xA;            loglevel: debug&#xA;&#xA;&#xA;&#xA;  mkdir /home/vagrant/registry&#xA;  sudo apt-get install build-essential python-dev libevent-dev python-pip libssl-dev&#xA;  cd ../&#xA;  sudo pip install -r requirements.txt&#xA;&#xA;&#xA;  sudo gunicorn --access-logfile - --debug -k gevent -b 0.0.0.0:8888 -w 1 wsgi:application &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;tag-and-提交自己的docker&#34; href=&#34;#tag-and-提交自己的docker&#34;&gt;&lt;/a&gt;tag and 提交自己的docker&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  sudo docker images&#xA;  sudo docker tag 8dbd9e392a96 150.236.233.184:8888/yt_ubuntu&#xA;  sudo docker push  150.236.233.184:8888/yt_ubuntu&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;成功后在repository里就有你的docker了&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;使用这些docker&#34; href=&#34;#使用这些docker&#34;&gt;&lt;/a&gt;使用这些docker&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  sudo docker run  -i -t 150.236.233.184:8888/yt_ubuntu  /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>试用Docker</title>
      <link>http://zhengyaotian.com/Cloud/%E8%AF%95%E7%94%A8Docker/</link>
      <pubDate>2013-12-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;目前版本0.7&lt;/p&gt;&#xA;&#xA;&lt;p&gt;支持Ubuntu, 一定要装64位的，否则装不上docker，目前不支持&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://docs.docker.io/en/latest/installation/ubuntulinux/&#34;&gt;http://docs.docker.io/en/latest/installation/ubuntulinux/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;##在Ubuntu上安装&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export http_proxy=&amp;lt;your proxy&amp;gt;&#xA;export https_proxy=$http_proxy&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;（为方便，最好将上面的设置到你的.bashrc中）&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo -E apt-get update&#xA;sudo -E apt-get install linux-image-generic-lts-raring linux-headers-generic-lts-raring&#xA;sudo reboot&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;重启以后&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo -E sh -c &amp;quot;wget -qO- https://get.docker.io/gpg | apt-key add -&amp;quot;&#xA;sudo -E sh -c &amp;quot;echo deb http://get.docker.io/ubuntu docker main\&#xA;&amp;gt;&amp;gt; /etc/apt/sources.list.d/docker.list&amp;quot;&#xA;sudo -E apt-get update&#xA;sudo -E apt-get install lxc-docker-0.7.1&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;##代理问题的解决&lt;/p&gt;&#xA;&#xA;&lt;p&gt;一半您的unbundu，会在公司的防火墙之后，所以您需要设置代理。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;默认安装是不能docker search人和东西的， 会出现如下的错误&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;root@precise64:/vagrant/registry# docker search bash&#xA;2013/12/10 05:37:21 Error: Get https://index.docker.io/v1/search?q=bash: dial tcp 54.224.119.89:443: connection timed out&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;解决办法是&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;停掉默认的docker 后台&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;service docker stop&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;在具有proxy的环境变量下运行后台进&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;sudo -E docker -d &amp;amp; &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;运行docker search&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;sudo -E docker run ubuntu /bin/echo hello world&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;sudo -E docker run -i -t ubuntu /bin/bash &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>VIM开发环境快速搭建</title>
      <link>http://zhengyaotian.com/配置管理/VIM%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/</link>
      <pubDate>2013-10-15 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/yaotian/.vim&#34;&gt;https://github.com/yaotian/.vim&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;curl -L https://raw.github.com/yaotian/.vim/master/install_ubuntu.sh|bash&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;一条命令，会安装所有的插件以及辅助软件，包括代码提示等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;目前环境可以支持一下语言的开发， golang, python, html， javascript等&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>About golang</title>
      <link>http://zhengyaotian.com/golang/About-golang/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;接触了不少程序语言，大学的C,C++,pascal,VB, VC, 后来工作中用到了Perl, PHP, Java, Shell script. 业余项目用Python. 后来因为关注了分布式操作系统Plan9, 再而知道Plan9的几个大牛从贝尔实验室来到google发明了golang,进而才仔细关注了golang.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;接触到golang以后，对它有一种莫名的好感。对它的感觉像是。。。浑身肌肉疙瘩的刚满18岁的棒小伙，充满了力量，却不失行动的轻盈，虽然有些稚气，却充满了希望。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;本站就为Go语言开发而成。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;以下是收集到的golang的一些资源&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;google资源&#34; href=&#34;#google资源&#34;&gt;&lt;/a&gt;Google资源&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;官方资源&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/go/downloads/list&#34;&gt;golang下载&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/go-wiki/w/list&#34;&gt;go wiki&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://build.golang.org/&#34;&gt;go build result&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://golangwiki.org/wiki/index.php?title=%E5%8C%85%E5%88%97%E8%A1%A8&#34;&gt;标准包列表&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;另：&lt;br /&gt;&#xA;+ &lt;a href=&#34;http://go-lang.cat-v.org/&#34;&gt;Go lang cat v&lt;/a&gt;&lt;br /&gt;&#xA;+ &lt;a href=&#34;https://github.com/wonderfo/wonderfogo/wiki&#34;&gt;国人一个信息集中站&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>import cycle not allowed的问题</title>
      <link>http://zhengyaotian.com/golang/import-cycle-not-allowed%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这个错误极其隐蔽&lt;/p&gt;&#xA;&#xA;&lt;p&gt;花了近半个小时，浪费呀。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你遇到这个错误&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  import cycle not allowed &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;查查你的代码的import部分，是不是将自己所在的package也import进来了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;例如&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    package Test&#xA;    import (&#xA;        &amp;quot;Test&amp;quot;&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Go语言笔记</title>
      <link>http://zhengyaotian.com/golang/Go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;go语言笔记&#34; href=&#34;#go语言笔记&#34;&gt;&lt;/a&gt;Go语言笔记&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;在window下部署开发环境&#34; href=&#34;#在window下部署开发环境&#34;&gt;&lt;/a&gt;在window下部署开发环境&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.install go (??)&lt;br /&gt;&#xA;2.编辑器，可以用vim,也可以用sublime&lt;br /&gt;&#xA;3.安装 gocode&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;go get github.com/nsf/gocode&#xA;go install github.com/nsf/gocode&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Note: 用proxy的话在环境中设置http_proxy 和https_proxy&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;指针&#34; href=&#34;#指针&#34;&gt;&lt;/a&gt;指针&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;有指针， 但没有指针运算&lt;/p&gt;&#xA;&#xA;&lt;p&gt;用法 new * &amp;amp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;go语言的指针，基本上只剩下用于区分 byref 和 byval 语义。多数人对指针都比较恐惧，其实是非常简单的东西，很多语言都有的。&#xA;做个类比的话，指针相当于 the,表示locate到这个特定位置，a的话就byVal值传递了。&#xA;go的method很体现这个问题&#xA;func (p *T) DoSomething() 就指向一个特定的*T as Receiver&#xA;func (p T) DoSomething() 就只指向一个类型T，不能够改变特定的T的值。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;因为没有了指针运算，包括数组都脱离了指针，所以，go里面的指针仅仅作为传递引用byRef的作用了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;amp; 表示指针地址&#xA;* 表示指针指向的值&lt;/p&gt;&#xA;&#xA;&lt;p&gt;例子&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    package main&#xA;&#xA;    import &amp;quot;fmt&amp;quot;&#xA;&#xA;    func main() {&#xA;        var p *int     //定义一个指针&#xA;        fmt.Println(p)  //所有新定义的变量都被赋值为其类型的零值&#xA;&#xA;        var i int = 9&#xA;        var p_i = &amp;amp;i    //获得指针的地址&#xA;&#xA;        fmt.Println(p_i) &#xA;&#xA;        fmt.Println(*p_i) //获得指针指向的值&#xA;    }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;new and make区别&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;1.new 分配内存，直接返回指针，意味着使用者可以用new 创建一个数据结构的实例并且可以直接工作&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    type SyncedBuffer struct {&#xA;    lock sync.Mutex&#xA;    buffer bytes.Buffer&#xA;    }&#xA;    &#xA;    SyncedBuffer 的值在分配内存或定义之后立刻就可以使用。在这个片段中，p和v都可以在没有任何更进一步处理的情况下工作。&#xA;&#xA;    p := new(SyncedBuffer)  &#xA;    Type *SyncedBuffer，已经可以使用&#xA;&#xA;    var v SyncedBuffer   Type SyncedBuffer，同上&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;2.make&lt;/p&gt;&#xA;&#xA;&lt;p&gt;只能创建slice，map 和channel，并且返回一个有初始值（非零）的T 类型，而不是*T。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;本质来讲，导致这三个类型有所不同的原因是指向数据结构的引用在使用前必须被初始化。例如，一个slice，是一个包含指向数据（内部array）的指针，&#xA;长度和容量的三项描述符；在这些项目被初始化之前，slice 为nil。对于slice，map 和channel， make 初始化了内部的数据结构，填充适当的值&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.总结&lt;/p&gt;&#xA;&#xA;&lt;p&gt;new(T) 返回*T 指向一个零值T&#xA;make(T) 返回初始化后的T (仅用于slice, map and channel)&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;模板的使用&#34; href=&#34;#模板的使用&#34;&gt;&lt;/a&gt;模板的使用&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;需要包 &amp;ldquo;html/template&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;文件操作&#34; href=&#34;#文件操作&#34;&gt;&lt;/a&gt;文件操作&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;文件读取&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;整个文件读取&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &amp;quot;os&amp;quot;&#xA;&#xA;func main() {&#xA;    buf := make([]byte, 1024)&#xA;    f, _ := os.Open(&amp;quot;test.md&amp;quot;) //打开文件，os.Open 返回一个实现了io.Reader 和io.Writer 的*os.File；&#xA;    defer f.Close()&#xA;    for {&#xA;        n, _ := f.Read(buf) //一次读取1024字节&#xA;        if n == 0 {&#xA;            break&#xA;        }&#xA;        os.Stdout.Write(buf[:n])&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;一行一行的读取&lt;/h4&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;系统命令&#34; href=&#34;#系统命令&#34;&gt;&lt;/a&gt;系统命令&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;quot;os/exec&amp;quot;&#xA;&#xA;cmd := exec.Command(&amp;quot;history&amp;quot;)&#xA;fmt.Println(cmd.Output())&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;并发&#34; href=&#34;#并发&#34;&gt;&lt;/a&gt;并发&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;channel和goroutine开发并行程序&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;goroutine&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;    &amp;quot;fmt&amp;quot;&#xA;    &amp;quot;time&amp;quot;&#xA;)&#xA;&#xA;func ready(w string, sec int) { &#xA;    time.Sleep(time.Duration(sec) * time.Second)&#xA;    fmt.Println(w,&amp;quot;is ready&amp;quot;)&#xA;&#xA;}&#xA;&#xA;func main() {&#xA;    go ready(&amp;quot;Tea&amp;quot;, 1)&#xA;    go ready(&amp;quot;Coffee&amp;quot;, 15)  &#xA;    fmt.Println(&amp;quot;I&#39;m waiting&amp;quot;)&#xA;    time.Sleep(5 * time.Second)   // Coffee 不会出现，因为这里只等了5秒，程序退出，所有的goroutine都会退出&#xA;    fmt.Println(&amp;quot;completed!&amp;quot;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;channel&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;goroutine之间的通信通过channel&lt;/p&gt;&#xA;&#xA;&lt;p&gt;必须使用make来创建channel&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ci := make(chan int)&#xA;cs := make(chan string)&#xA;cf := make(chan interface{})&#xA;&#xA;&#xA;&#xA;ci &amp;lt;- 1   发送整数1 到channel ci&#xA;&amp;lt;-ci   从channel ci 接收整数&#xA;i := &amp;lt;-ci   从channel ci 接收整数，并保存到i 中&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;虽然goroutine 是并发执行的，但是它们并不是并行运行的。如果不告诉Go 额外的东西，同一时刻只会有一个goroutine 执行。利用runtime.GOMAXPROCS(n) 可以设置goroutine 并行执行的数量。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对每一个goroutine都要读其输入。可以用简单的方法 for + select来实现&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;    &amp;quot;fmt&amp;quot;&#xA;    &amp;quot;time&amp;quot;&#xA;    &amp;quot;runtime&amp;quot;&#xA;)&#xA;&#xA;var c chan int&#xA;&#xA;func ready(w string, sec int) { &#xA;    time.Sleep(time.Duration(sec) * time.Second)&#xA;    fmt.Println(w,&amp;quot;is ready&amp;quot;)&#xA;    c&amp;lt;-1&#xA;}&#xA;&#xA;func main() {&#xA;    runtime.GOMAXPROCS(2)  //因为有两个cpu&#xA;    c = make(chan int)  &#xA;    go ready(&amp;quot;Tea&amp;quot;, 1)&#xA;    go ready(&amp;quot;Coffee&amp;quot;, 15)  &#xA;    fmt.Println(&amp;quot;I&#39;m waiting&amp;quot;)&#xA;    time.Sleep(5 * time.Second)   // Coffee 不会出现，因为这里只等了5秒，程序退出，所有的goroutine都会退出&#xA;&#xA;    var i int = 0&#xA;    L:  for{&#xA;        select {&#xA;        case &amp;lt;-c:&#xA;            i++&#xA;            if i&amp;gt;1{&#xA;                break L&#xA;            }&#xA;        }&#xA;    }&#xA;    fmt.Println(&amp;quot;completed!&amp;quot;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;当在Go 中用ch := make(chan bool) 创建chennel 时，bool 型的无缓冲channel 会被创建。这对于程序来说意味着什么呢？首先，如果读取（value := &amp;lt;-ch）它将会被阻塞，直到有数据接收。其次，任何发送（ch&amp;lt;-5）将会被阻塞，直到数据被读出。无缓冲channel 是在多个goroutine 之间同步很棒的工具。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ch := make(chan bool, 4)，创建了可以存储4 个元素的bool 型channel。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;x, ok = &amp;lt;-ch&lt;br /&gt;&#xA;当ok 被赋值为true 意味着channel 尚未被关闭，同时可以读取数据。否则ok 被赋值为false。在这个情况下表示channel 被关闭。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;正则表达式&#34; href=&#34;#正则表达式&#34;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;让正则表达式能处理多行&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;在正则表达式前加(?s)   &#xA;比如：(?s)&amp;lt;head&amp;gt;(.*?)&amp;lt;/head&amp;gt;  取出head之间的内容&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;吐槽：这个在文档中没有描述&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>如何写好API</title>
      <link>http://zhengyaotian.com/golang/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDAPI/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这是一篇如何写好API的好文章&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://dev.pocoo.org/~mitsuhiko/API.pdf&#34;&gt;http://dev.pocoo.org/~mitsuhiko/API.pdf&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>golang 单元测试</title>
      <link>http://zhengyaotian.com/golang/golang-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;测试某个文件&#34; href=&#34;#测试某个文件&#34;&gt;&lt;/a&gt;测试某个文件&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;使用”-file”参数。go test –file **.go 。例如，&lt;/p&gt;&#xA;&#xA;&lt;p&gt;go test  -file b_test.go&lt;/p&gt;&#xA;&#xA;&lt;p&gt;”-file”参数不是必须的，可以省略。如果你输入go test b_test.go也会得到一样的效果&lt;/p&gt;&#xA;&#xA;&lt;p&gt;warning: GOPATH set to GOROOT (c:\go) has no effect&lt;/p&gt;&#xA;&#xA;&lt;p&gt;PASS&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ok      &lt;em&gt;/F&lt;/em&gt;/workspace/goSample01/src/test      0.359s&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;测试某个方法&#34; href=&#34;#测试某个方法&#34;&gt;&lt;/a&gt;测试某个方法&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;go test  -run=&amp;lsquo;TestSomething&amp;rsquo;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>golang memory tuning</title>
      <link>http://zhengyaotian.com/golang/golang-memory-tuning/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;如果你的程序内存占用很大&lt;/p&gt;&#xA;&#xA;&lt;p&gt;项目中， 内存占用很大，运行过程中油几百兆。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;解决办法：&#34; href=&#34;#解决办法：&#34;&gt;&lt;/a&gt;解决办法：&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;你可以检查所有的string的处理， 能用[]byte就用[]byte, 特别是http.Get()， 还有regexp中都用[]byte。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;效果明显： 从几百兆，到几十兆&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;如何看内存溢出&#34; href=&#34;#如何看内存溢出&#34;&gt;&lt;/a&gt;如何看内存溢出&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;你可以在程式運行過程中產生多個 heap dump 檔案，接著在 perftools 裡使用 -base 參數來比對差異&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  e.g.&#xA;  go tool pprof ./gb --base heap-19221-1.pprof heap-19221-2.pprof &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>golang 算法包</title>
      <link>http://zhengyaotian.com/golang/golang-%E7%AE%97%E6%B3%95%E5%8C%85/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;https://code.google.com/p/biogo/&#34;&gt;https://code.google.com/p/biogo/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jbrukh/bayesian&#34;&gt;https://github.com/jbrukh/bayesian&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://go-lang.cat-v.org/pure-go-libs&#34;&gt;http://go-lang.cat-v.org/pure-go-libs&lt;/a&gt;&lt;br /&gt;&#xA;Math 章节&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>用VIM打造golang的开发环境</title>
      <link>http://zhengyaotian.com/golang/%E7%94%A8VIM%E6%89%93%E9%80%A0golang%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;VIM的方便就不用说了，听说一个中国的同事到了google的一个部门工作，发现除了一人使用emacs之外，其他人都在使用VIM，由此可见VIM在工程师中是多么的重要和流行&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在设置VIM之前,首先保证成功安装了Go，本文不再累述。本文主要讲如何设置VIM&#xA;在.vimrc中加入一下内容&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;quot; add golang support&amp;quot;&#xA;&#xA;set rtp+=$GOROOT/misc/vim&#xA;filetype plugin indent on&#xA;syntax on&#xA;autocmd FileType go setlocal noexpandtab shiftwidth=4 tabstop=4 softtabstop=4 nolist&#xA;autocmd FileType go autocmd BufWritePre &amp;lt;buffer&amp;gt; Fmt&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这段话能让你的VIM有了语法颜色，自动缩进。保存自动format代码。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果需要详细的代码提示，需要安装gocode, 且在.vimrc中加入&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;quot; add code assistant&#xA;imap &amp;lt;C-x&amp;gt; &amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这样按ctrl+x后，就可以看到代码提示了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Go package for tail-ing files</title>
      <link>http://zhengyaotian.com/golang/Go-package-for-tail-ing-files/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&#xA;&#xA;A Go package striving to emulate the features of the BSD `tail` program. &#xA;&#xA;```Go&#xA;t, err := tail.TailFile(&#34;/var/log/nginx.log&#34;, tail.Config{Follow: true})&#xA;for line := range t.Lines {&#xA;    fmt.Println(line.Text)&#xA;}&#xA;```&#xA;&#xA;See [API documentation](http://godoc.org/github.com/ActiveState/tail).&#xA;&#xA;## Log rotation&#xA;&#xA;Tail comes with full support for truncation/move detection as it is&#xA;designed to work with log rotation tools.&#xA;&#xA;## Installing&#xA;&#xA;    go get github.com/ActiveState/tail/...&#xA;&#xA;## TODO&#xA;&#xA;* Arbitrary values for `Location`&#xA;* `Location` could be specified in both lines and bytes metrics.&#xA;</description>
    </item>
    <item>
      <title>一个用golang实现的LDA</title>
      <link>http://zhengyaotian.com/golang/%E4%B8%80%E4%B8%AA%E7%94%A8golang%E5%AE%9E%E7%8E%B0%E7%9A%84LDA/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;一个用golang实现的lda&#34; href=&#34;#一个用golang实现的lda&#34;&gt;&lt;/a&gt;一个用golang实现的LDA&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://code.google.com/p/lda-go/&#34;&gt;https://code.google.com/p/lda-go/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Gibbs sampling training and inference of the Latent Dirichlet Allocation model written in Google&amp;rsquo;s Go programming language&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>golang开发环境的设置</title>
      <link>http://zhengyaotian.com/golang/golang%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;golang给我的感觉是简洁，语法，环境，执行，部署，无不讲简洁做到极致。所以开发环境的设置也是简洁的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;本文包括&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;golang的执行环境的设置&lt;/li&gt;&#xA;&lt;li&gt;Vim环境的设置&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;goland执行环境的设置&#34; href=&#34;#goland执行环境的设置&#34;&gt;&lt;/a&gt;goland执行环境的设置&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;vim环境的设置&#34; href=&#34;#vim环境的设置&#34;&gt;&lt;/a&gt;Vim环境的设置&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.复制我的vim 环境&#xA;我的vim环境的链接中有详细的步骤说明&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;https://github.com/yaotian/.vim&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;2.安装Gocode，为了让vim能实现代码自动补全&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  git clone git://github.com/nsf/gocode.git    &#xA;  cd gocode&amp;amp;make install     &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;安装好后，gocode的执行文件应该出现在$GOBIN中&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这个时候，当你用vim编辑golang代码时候，在编辑模式 下ctrl+x ctrl+o就会启动代码补全&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.安装ctags， 为了让vim能显示function在vim的左边&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Mountain Lion上由源代码安装Go</title>
      <link>http://zhengyaotian.com/golang/Mountain-Lion%E4%B8%8A%E7%94%B1%E6%BA%90%E4%BB%A3%E7%A0%81%E5%AE%89%E8%A3%85Go/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;mountain-lion上由源代码安装go&#34; href=&#34;#mountain-lion上由源代码安装go&#34;&gt;&lt;/a&gt;Mountain Lion上由源代码安装Go&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;配置hg的ca&#34; href=&#34;#配置hg的ca&#34;&gt;&lt;/a&gt;配置Hg的CA&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;OS 为10.8.2&#xA;    openssl req -new -x509 -extensions v3_ca -keyout /dev/null -out dummycert.pem -days 3650&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo cp dummycert.pem /etc/hg-dummy-cert.pem&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;创建配置文件&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;vi /etc/mercurial/hgrc&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;输入一下内容&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[web]&#xA;cacerts = /etc/hg-dummy-cert.pem&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;获得代码&#34; href=&#34;#获得代码&#34;&gt;&lt;/a&gt;获得代码&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;hg clone -u release https://code.google.com/p/go&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>目前看到的Go设计不合理的地方</title>
      <link>http://zhengyaotian.com/golang/%E7%9B%AE%E5%89%8D%E7%9C%8B%E5%88%B0%E7%9A%84Go%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%90%88%E7%90%86%E7%9A%84%E5%9C%B0%E6%96%B9/</link>
      <pubDate>2013-10-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;刚接触Go的时候，这个问题曾经困恼了我一个小时。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;export GOPATH={your src}&lt;/p&gt;&#xA;&#xA;&lt;p&gt;困恼的地方是{your src}是你的src的父目录，而不是src目录本身。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对于一个熟悉Java的人来说，这是非常不理解的。居然将src hardcode进GOPATH&lt;/p&gt;&#xA;&#xA;&lt;p&gt;意味着你不能将代码放在source目录下。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>推荐一款效率工具Launchy</title>
      <link>http://zhengyaotian.com/工具/%E6%8E%A8%E8%8D%90%E4%B8%80%E6%AC%BE%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7Launchy/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;推荐一款效率工具launchy&#34; href=&#34;#推荐一款效率工具launchy&#34;&gt;&lt;/a&gt;推荐一款效率工具Launchy&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;alt+space快速呼叫出窗口，并能快速启动应用程序。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;原理是搜索相应目录下的应用程序，并快速定位，启动他们。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;可以增加您自己的搜索目录。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;该软件支持各个平台，包括windows, linux, Mac OS&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>如何用wget抓整站，包括js, css等文件及目录结构</title>
      <link>http://zhengyaotian.com/工具/%E5%A6%82%E4%BD%95%E7%94%A8wget%E6%8A%93%E6%95%B4%E7%AB%99%EF%BC%8C%E5%8C%85%E6%8B%ACjs%2C-css%E7%AD%89%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;pre&gt;&lt;code&gt;    wget --restrict-file-name=ascii -m -c -nv -np -k -E -p -R=exe,zip http://&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>VIM tips</title>
      <link>http://zhengyaotian.com/工具/VIM-tips/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;中文问题的解决办法&#34; href=&#34;#中文问题的解决办法&#34;&gt;&lt;/a&gt;中文问题的解决办法&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;注意：如果NERDTree打开时，目录呈现乱码时，解决方案为：编辑NERD_tree.vim，找到这句call s:initVariable(&amp;ldquo;g:NERDTreeDirArrows&amp;rdquo;, !s:running_windows) ，把那个&amp;rdquo;!&amp;ldquo;去掉试试&lt;/p&gt;&#xA;&#xA;&lt;p&gt;跟简单的方法是： 在vimcrc中 let NERDTreeDirArrows = 0&lt;/p&gt;&#xA;&#xA;&lt;p&gt;export LANG=&amp;ldquo;zh_CN.UTF-8&amp;rdquo;              或者&amp;rdquo;en_US.UTF-8&amp;rdquo;&#xA; export LC_ALL=&amp;ldquo;zh_CN.UTF-8&amp;rdquo;           或者&amp;rdquo;en_US.UTF-8&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;修改SecureCRT设置&#xA; options-&amp;gt;appearance  character encoding 改为utf-8&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Postgresql Tips</title>
      <link>http://zhengyaotian.com/工具/Postgresql-Tips/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;常用命令&#34; href=&#34;#常用命令&#34;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;列出所有数据库&#34; href=&#34;#列出所有数据库&#34;&gt;&lt;/a&gt;列出所有数据库&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;\l&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;选择一个数据库&#34; href=&#34;#选择一个数据库&#34;&gt;&lt;/a&gt;选择一个数据库&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;\c &amp;lt;数据库名&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;列出所有table名&#34; href=&#34;#列出所有table名&#34;&gt;&lt;/a&gt;列出所有table名&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;\d&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;连接数据库&#34; href=&#34;#连接数据库&#34;&gt;&lt;/a&gt;连接数据库&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;psql -h &amp;lt;host&amp;gt; -p &amp;lt;port&amp;gt; -U &amp;lt;name&amp;gt; -d &amp;lt;databaseName&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>google搜索被屏蔽的解决办法</title>
      <link>http://zhengyaotian.com/工具/google%E6%90%9C%E7%B4%A2%E8%A2%AB%E5%B1%8F%E8%94%BD%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;刚才在网上看到了一个方法，经过试验后可行，分享之。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在Chrome中自定义一个搜索引擎，并将链接设为一下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    http://203.208.46.145/#newwindow=1&amp;amp;site=&amp;amp;source=hp&amp;amp;q=%s&amp;amp;oq=%s&amp;amp;gs_l=hp.3...1739.6881.0.7119.3.3.0.0.0.0.0.0..0.0...0.0...1c.1.14.hp.6DdgvWcpXug&amp;amp;bav=on.2,or.&amp;amp;bvm=bv.46751780,d.aGc&amp;amp;fp=155653324479abac&amp;amp;biw=710&amp;amp;bih=778&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>chrome的evernote clipper不能登录到印象笔记的账号</title>
      <link>http://zhengyaotian.com/工具/chrome%E7%9A%84evernote-clipper%E4%B8%8D%E8%83%BD%E7%99%BB%E5%BD%95%E5%88%B0%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E7%9A%84%E8%B4%A6%E5%8F%B7/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;吐槽贴。这种做法太。。。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;解决办法，需要将chrome的语言设置到中文， 在打开evernote clipper的chrome插件，你才能看到转到印象笔记登录的button.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这不是歧视英文嘛。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;吐槽&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>X-CTU的使用，配置Digi XBee模块</title>
      <link>http://zhengyaotian.com/工具/X-CTU%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%8C%E9%85%8D%E7%BD%AEDigi-XBee%E6%A8%A1%E5%9D%97/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;1.下载软件&lt;/p&gt;&#xA;&#xA;&lt;p&gt;file:///C:/Users/eyaotzh/Downloads/40003002_B.exe&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你第一次使用该软件，这时候你打开X-CTU，会发现没有找到相应的Com port. 执行第二部&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.第一步出错的原因是没有安装相应的USB驱动&lt;/p&gt;&#xA;&#xA;&lt;p&gt;将你的XBee的USB连接线插到电脑的USB口上， 将你的打开windows的“device manager&amp;rdquo; ，中文是设备管理器。从中可以看到有问号的设备，说明这些设备还没有驱动程序。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;通常这个设备是ft232r, 用强大的google找“ft232r win7 驱动” 找到相应的驱动程序。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我找到的是  &lt;a href=&#34;http://www.ftdichip.com/Drivers/VCP.htm&#34;&gt;http://www.ftdichip.com/Drivers/VCP.htm&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这样你就可以从X-CTU找到这个XBee了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.用X-CTU来配置XBee的参数&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有这么几个重要的参数需要配置： CH, ID, DH, DL, MY, SH, SL&lt;/p&gt;&#xA;&#xA;&lt;p&gt;CH：Channel 這個功能是讓Xbee的操作頻道可以更改成想要的頻道，因為常常會有相同的頻道之間會互相干擾，這個參數的最小是0x0B 到0x1A ＝ 0x0F = 16個頻段&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ID：PAN ID (Personal Area Network ID) 也就是個人區域網路的id編號，這個指的是在C段頻道當中，同一個PAN ID的編號之間的xbee才能相互看到，也就是達到分群的功能。這參數最小值是0最大是 0xFFFF&lt;/p&gt;&#xA;&#xA;&lt;p&gt;DH, DL ： Destination Address High/Low 這是IEEE 802.15.4所提供的定址能力，當DH+DL的時候最高可以提供32bit的定址能力，DH,DL個別的最小值是0最大值是0xFFFFFFFF，光是DL就有65535個node可以設定，當不使用DH的時候只需設定0，DL的範圍變成0~0xFFFF。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;MY：16bit的來源定址，基本上這個參數就是設定自己編號是多少，最小從0到0xFFFF，可以設定65,536個node。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;SH, SL：這兩個參數就是Xbee唯一的id編號，SH+SL等於一個唯一的MY編號，要讀取SH+SL就必須要使用DH+SL才可以用&lt;/p&gt;&#xA;&#xA;&lt;p&gt;例如：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;先將第一顆node的參數設定成：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ID = 888&#xA;&#xA;DL=1234&#xA;&#xA;MY=5678&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;第二颗的参数：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ID=888&#xA;&#xA;DL=5678&#xA;&#xA;MY=1234&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>VIM越用越好用</title>
      <link>http://zhengyaotian.com/工具/VIM%E8%B6%8A%E7%94%A8%E8%B6%8A%E5%A5%BD%E7%94%A8/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;忽然发现我不愿意去尝试各种编辑器了，只保留了VIM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这么多年来，一直没离开过程序开发，用过得编辑器不下几十种了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;想的起来的，从最早的Turbo C, 不知道还有没有人记得了。Bland 系列，MS visual 系列，  Visual Age(elicpse的前生), SourceInsight,  eclipse, 最近的Sublime。 TextMate ， 等等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;设计到的开发语言， pascal, perl , c , c++ , java, python, golang, javascript , html, css等等&lt;/p&gt;&#xA;&#xA;&lt;p&gt;每种开发语言， 都有一种针对它的编辑器出现。刚学习编程的时候， 就非常喜欢用各种IDE, 因为有提示， 有自动完成等功能（当然， 现在也喜欢）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;但后来发现， 不愿意去折腾各种各样的编辑器了。 我只选择了一样， 就是VIM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;mac上用mvim, 服务器上用vim, Ubuntu上用vim, windows上用gvim (这篇就是用gvim写的)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;原因是：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1.其它编辑器上的大多数功能， 在vim上都可以找到插件&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.同一种配置，适合各种环境。mac, linux(server and client), windows&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.简单，写就是了， 不需要考虑很多。就像kindle和ipad的区别， kindle的功能让你只专注看书。 VIM让你只专注你要写的代码本身。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我现在开始理解，为什么那些程序界的老家伙们为什么都在用VIM了。因为我们都已经老了， 更专注了。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>UNIX常用命令</title>
      <link>http://zhengyaotian.com/工具/UNIX%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;nohup不要输出Log&lt;/p&gt;&#xA;&#xA;&lt;p&gt;nohup ./main &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;br /&gt;&#xA;setsid ./main&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;用apt-get 升级系统&lt;/p&gt;&#xA;&#xA;&lt;p&gt;apt-get upgrade&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;它和apt-get dist-upgrade的区别是它只升级已经安装好的软件。 dis-upgrade是将整个系统升级&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;setsid让进程在后台运行&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;setsid program&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;看一个目录下面的文件大小&lt;/p&gt;&#xA;&#xA;&lt;p&gt;du -hs *&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;将一个人加入到管理员group中&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sudo addgroup jiaqi sudo&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;apt 搜索软件&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sudo sudo apt-cache search &lt;your software&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>Mac下最简单的翻墙技巧</title>
      <link>http://zhengyaotian.com/工具/Mac%E4%B8%8B%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%BF%BB%E5%A2%99%E6%8A%80%E5%B7%A7/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;以前一直用goagent来翻墙，最近一直不稳定，而我又是google的重度使用者，所以就开始想其他的解决办法。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我有VPS， 所以对与这个来说，最简单的方法是用ssh 隧道来实现。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;基本原理:&#34; href=&#34;#基本原理:&#34;&gt;&lt;/a&gt;基本原理:&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;ssh可以传送数据，我们可以让那些不加密的网络连接，全部改走SSH连接。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;假定我们要让7000端口的数据，都通过SSH传向远程主机，命令就这样写：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ ssh -D 7000 user@host&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这样就在本机设置了一个运行在7000端口的代理。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;将浏览器的代理设置成这个代理就可以翻墙了。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;具体步骤如下&#34; href=&#34;#具体步骤如下&#34;&gt;&lt;/a&gt;具体步骤如下&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.目前有很多的VPS,便宜的有&lt;a href=&#34;https://service.burst.net/aff.php?aff=2002&#34;&gt;Burst net&lt;/a&gt;,最便宜的不到6美金. 速度快而稳定的有&lt;a href=&#34;http://www.linode.com/?r=d9ee76f48097286f4832d02e67930354125e9f7d&#34;&gt;Linode&lt;/a&gt;,基本上所有的VPS都支持ssh登陆的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.在mac上运行下面命令&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ssh -D 7000 {your user}@{your host}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这个步骤基本上你已经在你mac上建立7000端口上的ssh channel了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.修改你的浏览器代理为localhost 7000。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;例如，如果你用chrome的Proxy Switch Sharp 插件，， 设置Socks5代理: localhost  7000  &lt;strong&gt;注意要选择Socket v5&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;一定要只设置Socks5代理，其它的都不要设置&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Linux上的原理和Mac上一样。所以步骤一样&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;开始享受吧&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Mac下好用的mysql管理工具</title>
      <link>http://zhengyaotian.com/工具/Mac%E4%B8%8B%E5%A5%BD%E7%94%A8%E7%9A%84mysql%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;大家知道的mysql管理工具是官网上提供的mysql workbench.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;但那个工具太难用了， 还占用很多资源。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;偶然遇到了这个工具，非常好用，支持mac平台。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.sequelpro.com/&#34;&gt;http://www.sequelpro.com/&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Linux下编辑大文件</title>
      <link>http://zhengyaotian.com/工具/Linux%E4%B8%8B%E7%BC%96%E8%BE%91%E5%A4%A7%E6%96%87%E4%BB%B6/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;如果你有在linux下用vim打开10G文件的体验的话， 你一定有这个感受，机器CPU立刻100%占用，vim长时间不反馈。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这里提供了一个解决方案，将大文件分成小文件，然后编辑完后，恢复成大文件&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;split -b 512000k mysqlbak20130510.sql    &#xA;cat ./xa* &amp;gt; result.sql  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>何为建模</title>
      <link>http://zhengyaotian.com/大数据/%E4%BD%95%E4%B8%BA%E5%BB%BA%E6%A8%A1/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;数据可以通过其生成所可能遵从的统计过程来建模，其它的大部分建模方式可以分两种&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;对数据进行简洁的近似汇总描述&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Google的PageRank&lt;/p&gt;&#xA;&#xA;&lt;p&gt;聚类&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;对数据中抽取出最突出的特征来代替数据并将剩余内容忽略。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;频繁项集 （ frequent itemset ): 比如购物篮中同时出现的小规模项集&lt;/p&gt;&#xA;&#xA;&lt;p&gt;相识项 ( similar item )： 共同元素比较高的集合对。 比如将购买过的产品推荐给相似的用户组&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>数据挖掘和机器学习的区别</title>
      <link>http://zhengyaotian.com/大数据/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%92%8C%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;数据挖掘中适当用到了机器学习的算法，于是有些人将数据挖掘和机器学习等同起来。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;机器学习的实践者将数据当作训练集来训练某类算法，比如贝叶斯网络， 支持向量机， 决策树，隐马尔科夫模型等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;机器学习擅长的典型场景是人们对数据中的寻找目标一无所知，比如大家对一些影片的喜欢和讨厌的原因，什么影响了人们对他们的投票，设计算法来预测观众对影片的评分。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当挖掘的目标能更直接地描述时，机器学习的效果并不好。WhizBang 实验室曾用机器学习来定位人的简历，效果不如通过关键字和短语来查找。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>gocircuit</title>
      <link>http://zhengyaotian.com/大数据/gocircuit/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;gocircuit&#34; href=&#34;#gocircuit&#34;&gt;&lt;/a&gt;gocircuit&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;编译zookeeper出问题&#34; href=&#34;#编译zookeeper出问题&#34;&gt;&lt;/a&gt;编译zookeeper出问题&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  /tmp/zookeeper-3.4.5/src/c/src/hashtable/hashtable.c:51: undefined reference to `ceilf&#39;&#xA;&#xA;  解决办法是：&#xA;&#xA;  export CGO_LDFLAGS=&amp;quot;$ZKLIB/libzookeeper_mt.a -lm&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Stream Data Analysis (流数据分析技术)</title>
      <link>http://zhengyaotian.com/大数据/Stream-Data-Analysis-%28%E6%B5%81%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%29/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;背景&#34; href=&#34;#背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;智能手机的普及，物联网应用的推广，信息化程度的提高，越来越多的数据被产生出来。这些数据越来越多，越来越大，以至于保存这些数据的成本越来越高。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当我们努力将数据保存到数据库的同时，我们应该想想：&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们为什么要保存数据？&lt;/li&gt;&#xA;&lt;li&gt;保存数据的目的是什么？&lt;/li&gt;&#xA;&lt;li&gt;有没有技术能在不保存数据的同时，讲我们需要的信息给提取出来，我们只需要保存我们关心的。&lt;/li&gt;&#xA;&lt;li&gt;且这样就能够做到对数据的变动做出实时的反馈&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;流数据技术研究，就是为了解决这样的问题的。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;和hadoop的区别&#34; href=&#34;#和hadoop的区别&#34;&gt;&lt;/a&gt;和Hadoop的区别&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;大数据研究，有三个方面相互制约： 计算资源，结果的精确度，所花的时间。 三个方面不可能都做到最好。你想要更高的精度，你就需要更多的计算资源或更长的计算时间。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hadoop环境，提供了强大的计算资源，在相应的时间内可以对数据分析到一个相对满意的精确度。由于设计上的考虑，Hadoop系统擅长对保存下来的离线数据集进行分析，但对在线的数据实时获得结果有一定的难度。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;技术难点&#34; href=&#34;#技术难点&#34;&gt;&lt;/a&gt;技术难点&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;这个领域的技术难点是：如何找出一种方法或算法，利用最少的资源，来获得最大的信息，以做到实时反馈&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;good-articles&#34; href=&#34;#good-articles&#34;&gt;&lt;/a&gt;Good Articles&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/dataminingtools/mining-stream-time-series-and-sequence-data&#34;&gt;Slides of Mining stream time series and sequence data&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Storm 开发相关</title>
      <link>http://zhengyaotian.com/大数据/Storm-%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;TopologyBuilder 是经常用到的build&lt;/p&gt;&#xA;&#xA;&lt;p&gt;builder.setSpout(&amp;ldquo;1&amp;rdquo;, new TestWordSpout(true), 5);  5表示几个task分给这个模块去执行, 他们在thread中运行, 如果没有设置，默认为1个thread。1表示这个模块的id, 用这个id来获取这个模块的output。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    builder.setBolt(&amp;quot;3&amp;quot;, new TestWordCounter(), 3)&#xA;              .fieldsGrouping(&amp;quot;1&amp;quot;, new Fields(&amp;quot;word&amp;quot;))&#xA;              .fieldsGrouping(&amp;quot;2&amp;quot;, new Fields(&amp;quot;word&amp;quot;));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;setBolt returns an InputDeclarer object that is used to define the inputs to the Bolt.  input declarations can be chained to specify multiple sources for the Bolt.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    builder.setBolt(&amp;quot;4&amp;quot;, new TestGlobalCount()) &#xA;              .globalGrouping(&amp;quot;1&amp;quot;);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;stream-groupings&#34; href=&#34;#stream-groupings&#34;&gt;&lt;/a&gt;Stream Groupings&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nathanmarz/storm/wiki/Concepts&#34;&gt;具体的描述在这里&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;fieldsGrouping&#xA;A fields grouping lets you group a stream by a subset of its fields. This causes equal values for that subset of fields to go to the same task.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;shuffleGrouping: &amp;ldquo;shuffle grouping&amp;rdquo; means that tuples should be randomly distributed from the input tasks to the bolt&amp;rsquo;s tasks.&#xA;The simplest kind of grouping is called a &amp;ldquo;shuffle grouping&amp;rdquo; which sends the tuple to a random task.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Global grouping: The entire stream goes to a single one of the bolt&amp;rsquo;s tasks. Specifically, it goes to the task with the lowest id.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Every node in a topology must declare the output fields for the tuples it emits.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&#xA;_collector.emit(tuple, new Values(tuple.getString(0) + &amp;ldquo;!!!&amp;rdquo;));&#xA;_collector.ack(tuple);&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;config&#34; href=&#34;#config&#34;&gt;&lt;/a&gt;Config&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;Config conf = new Config();&#xA;conf.setDebug(true);&#xA;conf.setNumWorkers(2);&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;tasks-vs-workers&#34; href=&#34;#tasks-vs-workers&#34;&gt;&lt;/a&gt;Tasks vs Workers&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;A Task is thread.. A Worker is a physical VM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Storm中的fieldGroup能保证同一个field到同一个bolt, 但不能保证同一个bolt运行的都是那个filed的数据。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>开源运行在Hadoop上的Storm （Storm-Yarn）</title>
      <link>http://zhengyaotian.com/大数据/%E5%BC%80%E6%BA%90%E8%BF%90%E8%A1%8C%E5%9C%A8Hadoop%E4%B8%8A%E7%9A%84Storm-%EF%BC%88Storm-Yarn%EF%BC%89/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;好处&#34; href=&#34;#好处&#34;&gt;&lt;/a&gt;好处&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;弹性计算资源&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;将Storm运行到YARN上后，Storm可与其他应用程序（比如MapReduce批处理应用程序）共享整个集群中的资源，这样，当Storm负载骤增时，可动态为它增加计算资源，而当负载减小时，可释放部分资源，从而将这些资源暂时分配给负载更重的批处理应用程序。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;共享底层存&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Storm可与运行在YARN上的其他框架共享底层的一个HDFS存储系统，可避免多个集群带来的维护成本，同时避免数据跨集群拷贝带来的网络开销和时间延迟。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;支持多版本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;可同时将多个Storm版本运行YARN上，避免一个版本一个集群带来的维护成本。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Storm</title>
      <link>http://zhengyaotian.com/大数据/Storm/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;twitter对storm的定义&#34; href=&#34;#twitter对storm的定义&#34;&gt;&lt;/a&gt;Twitter对Storm的定义&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Storm is a free and open source distributed realtime computation system. Storm makes it easy to reliably process unbounded streams of data, doing for realtime processing what Hadoop did for batch processing. Storm is simple, can be used with any programming language, and is a lot of fun to use!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Storm has many use cases: realtime analytics, online machine learning, continuous computation, distributed RPC, ETL, and more. Storm is fast: a benchmark clocked it at over a million tuples processed per second per node. It is scalable, fault-tolerant, guarantees your data will be processed, and is easy to set up and operate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Storm integrates with the queueing and database technologies you already use. A Storm topology consumes streams of data and processes those streams in arbitrarily complex ways, repartitioning the streams between each stage of the computation however needed. Read more in the tutorial.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;工作节点&#34; href=&#34;#工作节点&#34;&gt;&lt;/a&gt;工作节点&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Storm集群中包含两类节点：主控节点（Master Node）和工作节点（Work Node）。&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;主控节点（Master Node）上运行一个被称为Nimbus的后台程序，它负责在Storm集群内分发代码，分配任务给工作机器，并且负责监控集群运行状态。Nimbus的作用类似于Hadoop中JobTracker的角色。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;每个工作节点（Work Node）上运行一个被称为Supervisor的后台程序。Supervisor负责监听从Nimbus分配给它执行的任务，据此启动或停止执行任务的工作进程。每一个工作进程执行一个Topology的子集；一个运行中的Topology由分布在不同工作节点上的多个工作进程组成。&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;稳定性&#34; href=&#34;#稳定性&#34;&gt;&lt;/a&gt;稳定性&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Nimbus和Supervisor节点之间所有的协调工作是通过Zookeeper集群来实现的。此外，Nimbus和Supervisor进程都是快速失败（fail-fast)和无状态（stateless）的；Storm集群所有的状态要么在Zookeeper集群中，要么存储在本地磁盘上。这意味着你可以用kill -9来杀死Nimbus和Supervisor进程，它们在重启后可以继续工作。这个设计使得Storm集群拥有不可思议的稳定性。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;依赖的第三方&#34; href=&#34;#依赖的第三方&#34;&gt;&lt;/a&gt;依赖的第三方&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;安装的时候是需要安装它的依赖第三方软件&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;将 以下内容加入到环境变量中 .bashrc&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/&#xA;export ZOOKEEPER_HOME=/opt/applications/current_zookeeper&#xA;export STORM_HOME=/opt/applications/current_storm&#xA;export PATH=$PATH:$ZOOKEEPER_HOME/bin:$STORM_HOME/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;按你安装的软件目录做相应的修改&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Zookeeper&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;直接解压到/opt/applications/zookeeper-3.4.5  然后ln -s ./zookeeper-3.4.5 ./current_zookeeper&lt;/p&gt;&#xA;&#xA;&lt;p&gt;/opt/applications/current_zookeeper/conf  下面 touch zoo.cfg 加入一下内容&lt;/p&gt;&#xA;&#xA;&lt;p&gt;tickTime=2000&#xA;dataDir=/opt/applications/data/zookeeper&#xA;clientPort=2181&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(?? 要下面这步吗？）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在/etc/ld.so.conf后追加/usr/local/lib/&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sudo ldconfig&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;ZeroMQ&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;遇到找不到编译器的问题的时候，执行这个&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install g++&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;遇到luuid的时候，执行这个&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install uuid-dev&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;Jzmq&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;如果遇到这个问题&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;No rule to make target `classdist_noinst.stamp&#39;, needed by `org/zeromq/ZMQ.class&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;解决办法是&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;user$ git clone https://github.com/nathanmarz/jzmq.git&#xA;user$ cd jzmq&#xA;user$ ./autogen.sh&#xA;user$ ./configure&#xA;user$ touch src/classdist_noinst.stamp&#xA;user$ cd src&#xA;user$ CLASSPATH=.:./.:$CLASSPATH javac -d . org/zeromq/ZMQ.java org/zeromq/ZMQException.java org/zeromq/ZMQQueue.java org/zeromq/ZMQForwarder.java org/zeromq/ZMQStreamer.java&#xA;user$ cd ..&#xA;user$ make&#xA;user$ sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;需要安装依赖库&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install libtool&#xA;apt-get install autoconf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;安装设置storm&#34; href=&#34;#安装设置storm&#34;&gt;&lt;/a&gt;安装设置storm&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;下载，解压到目录，设置环境变量（已经在第一步设置）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;到&lt;storm home&gt;/conf/storm.yaml 加入一下内容&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;storm.zookeeper.servers:&#xA;      - &amp;quot;localhost&amp;quot;&#xA;nimbus.host: &amp;quot;localhost&amp;quot;&#xA;storm.local.dir: &amp;quot;/opt/applications/data/stormtmp&amp;quot;&#xA;supervisor.slots.ports:&#xA;      - 6700&#xA;      - 6701&#xA;      - 6702&#xA;      - 6703&#xA;&#xA;worker.childopts: &amp;quot;-Xmx768m&amp;quot;&#xA;nimbus.childopts: &amp;quot;-Xmx512m&amp;quot;&#xA;supervisor.childopts: &amp;quot;-Xmx256m&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;到root目录创建目录.storm， 拷贝 一个storm.yaml到这个目录下&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;运行方式&#34; href=&#34;#运行方式&#34;&gt;&lt;/a&gt;运行方式&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;A Storm cluster is managed by a master node called &amp;ldquo;Nimbus&amp;rdquo;. Your machine communicates with Nimbus to submit code (packaged as a jar) and topologies for execution on the cluster, and Nimbus will take care of distributing that code around the cluster and assigning workers to run your topology. Your machine uses a command line client called storm to communicate with Nimbus. The storm client is only used for remote mode; it is not used for developing and testing topologies in local mode.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;运行&#34; href=&#34;#运行&#34;&gt;&lt;/a&gt;运行&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;start zookeeper&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;/opt/applications/current_zookeeper/bin/zkServer.sh start&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;start nimbus&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;storm nimbus&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;start supervisor&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;storm supervisor&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;运行一个example&#34; href=&#34;#运行一个example&#34;&gt;&lt;/a&gt;运行一个example&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nathanmarz/storm-starter&#34;&gt;https://github.com/nathanmarz/storm-starter&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;安装一个设置环境的脚本&#34; href=&#34;#安装一个设置环境的脚本&#34;&gt;&lt;/a&gt;安装一个设置环境的脚本&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/technomancy/leiningen&#34;&gt;https://github.com/technomancy/leiningen&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;简单有效的方法是直接运行那个script, script会自动下载它需要的包。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;遇到的问题有&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;java -cp $(lein classpath) storm.starter.ExclamationTopology&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这个没有结果。原因是lein classpath 停止在那里，原因是没有设置 LEIN_ROOT&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export LEIN_ROOT=/usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;/usr/local/bin是你放脚本的那个目录&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Java example&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;lein deps&#xA;lein compile&#xA;java -cp $(lein classpath) storm.starter.ExclamationTopology&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Clojure example&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;lein deps&#xA;lein compile&#xA;lein run -m storm.starter.clj.word-count&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;问题集&#34; href=&#34;#问题集&#34;&gt;&lt;/a&gt;问题集&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;开发过程&#34; href=&#34;#开发过程&#34;&gt;&lt;/a&gt;开发过程&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;用python写bolt和spout的过程中，遇到进程遗留在系统中。这是storm目前存在的问题&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;可以用下面的命令来杀掉进程&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ps aux | grep python | awk &#39;{ print $2 }&#39; | xargs kill&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;update: 有一个更简单的命令:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;killall python&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>User Profile Analysis 用户行为分析</title>
      <link>http://zhengyaotian.com/大数据/User-Profile-Analysis-%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;references&#34; href=&#34;#references&#34;&gt;&lt;/a&gt;References&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;[Following the User’s Interests in Mobile Context-Aware Recommender Systems]  &lt;a href=&#34;http://www.academia.edu/1617046/Following_the_Users_Interests_in_Mobile_Context-Aware_Recommender_Systems&#34;&gt;http://www.academia.edu/1617046/Following_the_Users_Interests_in_Mobile_Context-Aware_Recommender_Systems&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>HBase 和 MongoDB的区别</title>
      <link>http://zhengyaotian.com/大数据/HBase-%E5%92%8C-MongoDB%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>2013-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;总体来说两者的设计思路差不多，主要就是通过划区间去分布数据，后台进程进行数据分裂&lt;/p&gt;&#xA;&#xA;&lt;p&gt;两者的区别主要在于：&lt;br /&gt;&#xA;1、HBase依赖于HDFS；MongoDB直接存储在本地磁盘中&lt;br /&gt;&#xA;2、HBase按照列族将数据存储在不同的文件中；MongoDB不分列，整个文档都存储在一个（或者说一组）文件中，通过一个有一个通用的.ns文件保存名称空间（Column-based和Document-Based之间的区别应该是指这个地方吧）&lt;br /&gt;&#xA;3、HBase一个region只有一个HRegionServer对外提供服务（没有负载均衡的概念）；MongoDB的shards（类似于region）支持负载均衡（主从结构，通过日志进行同步，这个HBase也在开发计划当中）&lt;br /&gt;&#xA;4、HBase根据文件的大小来控制region的分裂；MongoDB根据负载来决定shards的分裂（没有深入研究,不知道如何根据负载的）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;MongoDB相关介绍：&lt;br /&gt;&#xA;&lt;a href=&#34;http://www.mongodb.org/&#34;&gt;http://www.mongodb.org/&lt;/a&gt;&lt;br /&gt;&#xA;&lt;a href=&#34;http://www.slideshare.net/mdirolf/inside-mongodb-the-internals-of-an-opensource-database&#34;&gt;http://www.slideshare.net/mdirolf/inside-mongodb-the-internals-of-an-opensource-database&lt;/a&gt;&lt;br /&gt;&#xA;&lt;a href=&#34;http://www.ningoo.net/html/2011/mongodb_in_a_nutshell_1.html&#34;&gt;http://www.ningoo.net/html/2011/mongodb_in_a_nutshell_1.html&lt;/a&gt;&lt;br /&gt;&#xA;&lt;a href=&#34;http://blog.csdn.net/daizhj&#34;&gt;http://blog.csdn.net/daizhj&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;有待从官网资料去验证此信息&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;创作品，如需转载，请留言告知，原文转载并在文章开头明显位置加上署名和原链接，不得用于商业用途，不得修改、转换或者以本作品为基础进行创作，谢谢合作 &lt;br&gt;作者：郑尧天 &lt;br&gt;时间: =strftime(&amp;ldquo;%Y-%m-%d/%H:%M:%S&amp;rdquo;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2013-09-07/21:36:03&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>About R</title>
      <link>http://zhengyaotian.com/大数据/About-R/</link>
      <pubDate>2013-08-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;R语言是主要用于统计分析、绘图的语言和操作环境. 是研究分析数据的必备工具。做Data Mining或者Machine Learning的研究人员会经常用到这门语言。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;r-vs-weka&#34; href=&#34;#r-vs-weka&#34;&gt;&lt;/a&gt;R vs Weka&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;R is way more powerful and flexible than Weka. This means that you can do numerous things with R which are not possible with Weka&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An example would be the very customizable way of plotting data in R. Secondly, once you feel comfortable with R you can save plenty of time.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;rstudio&#34; href=&#34;#rstudio&#34;&gt;&lt;/a&gt;RStudio&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.rstudio.com/&#34;&gt;download RStudio&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;下载安装后还不能直接用，因为RStudio只是个环境而已，使用之前需要安装R&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/&#34;&gt;download R&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;useful-link&#34; href=&#34;#useful-link&#34;&gt;&lt;/a&gt;Useful Link&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://jeromyanglim.blogspot.com/2010/05/videos-on-data-analysis-with-r.html&#34;&gt;R Video&lt;/a&gt;&#xA;&lt;a href=&#34;http://www.statmethods.net/advstats/&#34;&gt;Quick R, 很多有关R的Tips&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;books&#34; href=&#34;#books&#34;&gt;&lt;/a&gt;Books&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/0596809158/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=florhart-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0596809158&#34;&gt;R Cookbook&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/059680170X/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=florhart-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=059680170X&#34;&gt;R in Nutshell&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;good-articles&#34; href=&#34;#good-articles&#34;&gt;&lt;/a&gt;Good Articles&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.r-bloggers.com/massive-online-data-stream-mining-with-r/&#34;&gt;Massive online data stream mining with R&lt;/a&gt;&#xA;&lt;a href=&#34;http://rdatamining.wordpress.com/2011/08/23/time-series-analysis-and-mining-with-r/&#34;&gt;Time Series Analysis and Mining with R&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>RStudio Tips</title>
      <link>http://zhengyaotian.com/大数据/RStudio-Tips/</link>
      <pubDate>2013-08-08 12:00:00 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;下载及安装R&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;下载及安装Rstudio. 会提示你选择相应你安装的R&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;如果你用到R Markdown. 你需要install package of knitr.&#xA;在console里面输入以下内容进行安装&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;knitr&amp;quot;)    &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;如果你用Rstudio直接链接数据库，你需要安装RMysql. 以下是操作数据库的步骤&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;install.packages(&#39;RMySQL&#39;,type=&#39;source&#39;)&#xA;install.packages(&amp;quot;ggplot2)&#xA;conn &amp;lt;- dbConnect(MySQL(), user=&amp;quot;root&amp;quot;, password=&amp;quot;your pwd&amp;quot;, host=&amp;quot;127.0.0.1&amp;quot;, dbname=&amp;quot;db&amp;quot;)&#xA;transfer_values &amp;lt;- dbGetQuery(con, &amp;quot;select * from your_table_name&amp;quot;)&#xA;summary(transfer_values)&#xA;plot(transfer_values$your_column_name)&#xA;aplot(transfer_values$your_column_name)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>评论系统插件的思考</title>
      <link>http://zhengyaotian.com/Web/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%8F%92%E4%BB%B6%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;评论系统插件的思考&#34; href=&#34;#评论系统插件的思考&#34;&gt;&lt;/a&gt;评论系统插件的思考&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;为了给本站加上社交评论系统，做了点国内评论系统的小研究。国外的有Disqus，国内有多说，友言，评论吧等&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;多说从站点上主要介绍wordpress的插件，也提到通用代码，可点击后是错误链接，放弃。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;友言通用代码粘贴到网页后，没反应，无错误。分析10分钟后无果，放弃&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;Disqus， 注册登陆，粘贴代码，立刻生效可用。&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;从上面的实际操作看，老牌Disqus还是流畅。唯一的缺点是没有分享国内微博或社交网站的小链接。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;前些年网站的评论系统都是自己写，因为用户的评论是网站一种资源，资源是不太愿意分享出来的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;近些年开源项目的普遍，社交网络的发展，这些背景下评论系统也开始的社交化。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>信息抓取中如何解决网站拒绝问题</title>
      <link>http://zhengyaotian.com/Web/%E4%BF%A1%E6%81%AF%E6%8A%93%E5%8F%96%E4%B8%AD%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%BD%91%E7%AB%99%E6%8B%92%E7%BB%9D%E9%97%AE%E9%A2%98/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;信息抓取中如何解决网站拒绝问题&#34; href=&#34;#信息抓取中如何解决网站拒绝问题&#34;&gt;&lt;/a&gt;信息抓取中如何解决网站拒绝问题&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;最近，给二手车收集器(http://sche.mobi)增加了些功能，让它自维护，涉及到信息抓取。一下是其中一些问题的解决办法。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在信息抓取过程中，经常遇到的问题&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;你被网站认为是程序访问，而不是个人通过浏览器访问&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;2.你访问的次数太频繁，而被拒绝访问&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.你同时建立的连接已经超过了通常的数量，而被拒绝访问。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;针对这个问题，yaotian给出的解决办法核心思想如下：&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;你建立的网络连接一定要模拟出浏览器的特征属性&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;在访问同一个网站的时候，应该用连接池。连接池的意思是在本地列表中维护你已经创建出来的连接。当有连接需要的时候，从这个池中任意挑选一个。这样可以减少打开连接的次数和打开的数量&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;遇到timeout的时候可以尝试多次。&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;一下给出例子&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如何给出浏览器伪装&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;headers = {&#xA;&#xA;    ‘User-Agent’:&#39;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6′&#xA;}&#xA;req = urllib2.Request(&#xA;    url = ‘http://sche.mobi’,&#xA;    data = postdata,&#xA;    headers = headers&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;如何建立连接池和retry&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;def retrieve_url(url,retries= 3):&#xA;    url_parse = urlparse.urlsplit(url)&#xA;    hostname = url_parse[ 1]&#xA;    if hostname in http_connection_pool:&#xA;        connections = http_connection_pool[hostname]&#xA;        if len(connections) &amp;lt; 5:&#xA;            opener = urllib2.build_opener(support, urllib2.HTTPHandler )&#xA;            connections.append(opener)&#xA;            http_connection_pool[hostname]=connections&#xA;        else:&#xA;            i = random.randint( 0, 4)&#xA;            opener = connections[i]&#xA;    else:&#xA;        opener = urllib2.build_opener( support, urllib2.HTTPHandler )&#xA;        http_connection_pool[hostname]=[opener]&#xA;    try:&#xA;        req = urllib2.Request(&#xA;            url = url,&#xA;            headers = headers&#xA;        )&#xA;        return opener.open(req).read()&#xA;    except Exception:&#xA;        if retries&amp;gt; 0:&#xA;                return retrieve_url(url,retries- 1)&#xA;        else:&#xA;            logger.exception( “Can’t retrieve content from url:”+url)&#xA;            return None&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;在我的程序中出现任何问题，都会给我邮箱中发出错详细信息。以前每天都有抓取失败的邮件，采用了以上的方法后，基本上没有抓取失败的邮件了，太好了，喝咖啡去。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>群发邮件的两种方法</title>
      <link>http://zhengyaotian.com/Web/%E7%BE%A4%E5%8F%91%E9%82%AE%E4%BB%B6%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;可以选用两种方式：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.mailgun.com/&#34;&gt;http://www.mailgun.com/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://aws.amazon.com/ses/&#34;&gt;http://aws.amazon.com/ses/&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>HTML5开发javascript跨域问题的解决</title>
      <link>http://zhengyaotian.com/Web/HTML5%E5%BC%80%E5%8F%91javascript%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;Html5+PhoneGap+Jquery Mobile可以开发出跨不同手机平台的手机应用。但在开发过程中也会遇到一些问题。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;写出来的HTML页面必须在手机环境下调试吗？那就失去了它的一大优势了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;下面说说如何在浏览器中调试我们的手机页面。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先碰到的问题就是javascript跨域名问题。浏览器因为安全的考虑是不允许跨域的，也需老版本的浏览器是支持的， 但目前的浏览器是不会支持的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先想到的是如何在程序上解决这个问题：&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在页面的javascript中解决&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;比如用jsonp技术等。 因为这不是本文的中间， 就不多说了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.在服务器端进行解决&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在服务端代码写入：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;resp.addHeader(&amp;quot;Access-Control-Allow-Origin&amp;quot;, &amp;quot;*&amp;quot;);//设置一个头信息，允许来自*是匹配任何域名的网站ajax，也就是支持跨域请求。 你可以把*修改成你的网站的域名，比如www.baidu.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这是w3c的标准&lt;/p&gt;&#xA;&#xA;&lt;p&gt;但是在phonegap中生成的手机应用为什么没有这个问题呢？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Phonegap 官方的说法是：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Phonegap 是通过 file:// 引入 index.html 页面，发送 ajax 请求不受跨域限制&lt;/p&gt;&#xA;&#xA;&lt;p&gt;最后通过无尽的搜索，发现需要在 PhoneGap.plist 里的 ExternalHosts 组里添加新 item, 值设定为要访问的域名就可以了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;所以为了简化问题，我们可以在浏览器中做做文章。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1.如果你用chrome的话， 可以用这条命令启动chrome, 这条命令实际上是disable了浏览器的安全检查。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;chrome --disable-web-security&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;但是chrome下的firebug不给力， 特别是Ubuntu下的， 压根就不让我运行。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.如果你用的是Firefox，那问题就简单了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;可以安装Force CORS插件 ， 完美解决跨域问题。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>d3 javascript 使用方法</title>
      <link>http://zhengyaotian.com/Web/d3-javascript-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;d3安装与运行&#34; href=&#34;#d3安装与运行&#34;&gt;&lt;/a&gt;d3安装与运行&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://d3js.org/&#34;&gt;d3 homepage&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mbostock/d3/wiki&#34;&gt;wiki in github&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mbostock/d3/wiki/API-Reference&#34;&gt;d3 API document&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在浏览器中直接打开html页面，有可能你不能运行d3，而看不到效果。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;解决办法是，运行一个本地的http 服务器&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    python -m SimpleHTTPServer 8888 &amp;amp;    &#xA;&#xA;    在python3下    &#xA;    python -m http.server 8888 &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;在浏览器中打开http://localhost:8888, 打开你的html。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>VIM配置Javascript开发环境</title>
      <link>http://zhengyaotian.com/Web/VIM%E9%85%8D%E7%BD%AEJavascript%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;插件&#39;pangloss/vim-javascript&#34; href=&#34;#插件&#39;pangloss/vim-javascript&#34;&gt;&lt;/a&gt;插件&amp;rsquo;pangloss/vim-javascript&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    Bundle &#39;pangloss/vim-javascript&#39;&#xA;&#xA;    在vim中运行gg=G， 可以自动format代码&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;插件“https://github.com/msanders/snipmate.vim”&#34; href=&#34;#插件“https://github.com/msanders/snipmate.vim”&#34;&gt;&lt;/a&gt;插件“https://github.com/msanders/snipmate.vim”&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;这个就不说了， 可以写自己的snipmate， 代码片段&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;godlygeek/tabular&#34; href=&#34;#godlygeek/tabular&#34;&gt;&lt;/a&gt;godlygeek/tabular&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;可以自动让你的代码和之前的代码进行对其。 在我的vim配置中github.com/yaotian/.vim.git中 已经做了快捷键的设置&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    在代码中输入,w:  就可以让color:&amp;quot;red&amp;quot; 进行对其&#xA;    在代码中国年输入,w= 就可以对 a=1 进行对其&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;jshint&#34; href=&#34;#jshint&#34;&gt;&lt;/a&gt;Jshint&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    Bundle &#39;walm/jshint.vim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;使用之前，需要先安装javascript Lint: &lt;a href=&#34;http://www.javascriptlint.com/download.htm&#34;&gt;http://www.javascriptlint.com/download.htm&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;vim-scripts-/-html-autoclosetag&#34; href=&#34;#vim-scripts-/-html-autoclosetag&#34;&gt;&lt;/a&gt;vim-scripts / HTML-AutoCloseTag&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    可以让你&amp;lt;body&amp;gt; 自动补全另一部分&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Inventory of javascript libary to visualize the topology</title>
      <link>http://zhengyaotian.com/Web/Inventory-of-javascript-libary-to-visualize-the-topology/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;inventory-of-javascript-libary-to-visualize-the-topology&#34; href=&#34;#inventory-of-javascript-libary-to-visualize-the-topology&#34;&gt;&lt;/a&gt;Inventory of javascript libary to visualize the topology&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;Search some libaries to visualize the topology diagram in the web page. This document is the summary of the research.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The conclusion is to try D3 first. If not workable, then will try Raphael.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;twaver&#34; href=&#34;#twaver&#34;&gt;&lt;/a&gt;TWaver&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://doc.servasoftware.com/pages/viewpage.action?pageId=18417321&#34;&gt;TWaver doc site&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is rich function on network element visulization.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is commercial software. Not open source.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;jgraph&#34; href=&#34;#jgraph&#34;&gt;&lt;/a&gt;Jgraph&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.jgraph.com/&#34;&gt;Jgraph&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It provides Java, Javascript libraries and rich function on network element.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is commercial software. Not open source.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;raphael&#34; href=&#34;#raphael&#34;&gt;&lt;/a&gt;Raphael&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://raphaeljs.com/index.html&#34;&gt;Raphael&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It&amp;rsquo;s a small java script library which is a wrapper based on SVG/VML&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It&amp;rsquo;s small and easy to use. ( It&amp;rsquo;s very good on mobile app. )&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It&amp;rsquo;s part of Sencha Labs ( which is developing popular Html5 application tool. )&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;jsplum&#34; href=&#34;#jsplum&#34;&gt;&lt;/a&gt;jsPlum&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sporritt/jsplumb/&#34;&gt;jsPlumb&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It&amp;rsquo;s based on JQuery and YUI3.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems personal project. Be afraid of the lack of support.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;d3&#34; href=&#34;#d3&#34;&gt;&lt;/a&gt;D3&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://d3js.org/&#34;&gt;d3&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;D3.js is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG and CSS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It has rich function.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comparing with jsPlum, it is more active than jsPlum.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>HostingInside可以买到256M的VPS</title>
      <link>http://zhengyaotian.com/Web/HostingInside%E5%8F%AF%E4%BB%A5%E4%B9%B0%E5%88%B0256M%E7%9A%84VPS/</link>
      <pubDate>2013-06-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;hostinginside可以买到256m的vps&#34; href=&#34;#hostinginside可以买到256m的vps&#34;&gt;&lt;/a&gt;HostingInside可以买到256M的VPS&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;HostingInside是一家台湾人开办的VPS服务商，VPS采用Xen技术架构，可以安装常见的Linux系统。最新发布一款特价VPS，256M Xen VPS只需5美元，折合人民币也就30元左右。HostingInside的优势是有中文客服，沟通方便；成立时间长，不会跑路。数据中心可以选择美国洛杉矶机房和英国机房，我们肯定选择洛杉矶，国内访问速度快。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Quotes 名人名言</title>
      <link>http://zhengyaotian.com/Quotes/Quotes-%E5%90%8D%E4%BA%BA%E5%90%8D%E8%A8%80/</link>
      <pubDate>2013-02-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;有没有曾经被某句话打动过？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有没有听过一段话后忽然醍醐灌顶?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quotes是一种心灵粮仓?&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;The people who get on in this world are the people who get up and look for circumstances they want , and if they cannot find them .they make them.(George Bernard Shaw , British dramatist )  &#xA;&#xA;在这个世界上，取得成功的人是那些努力寻找他们想要机会的人，如果找不到机会，他们就去创造机会。( 英国剧作家 肖伯纳. G.)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;乔布斯&#34; href=&#34;#乔布斯&#34;&gt;&lt;/a&gt;乔布斯&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.设计一个产品，你得将脑袋中5000个想法以全新的方式糅杂到一起，产出你想要的东西。每天你发现一个新东西，解决一个新问题，都是一个将这些事情变得稍微不一样的新机会。这个过程就是奥秘所在。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;李嘉诚&#34; href=&#34;#李嘉诚&#34;&gt;&lt;/a&gt;李嘉诚&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;如果在竞争中，你输了，那么你输在时间；反之，你赢了，也赢在时间 2、世界上并非每一件事情，都是金钱可以解决的，但是确实有很多事情需要金钱才能解决&#xA;kk&lt;/li&gt;&#xA;&lt;li&gt;说话守则&amp;ndash;①不批评、不责备、不抱怨、不攻击、不说教；②互相尊重；③绝不口出恶言；④情绪中不沟通，尤其是不能够做决定；⑤理性的沟通；⑥觉知：我错了，这就是一种觉知；⑦承认我错了；⑧说对不起；⑨智慧，使人不执着，而且福而且福至心灵&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;杨元庆&#34; href=&#34;#杨元庆&#34;&gt;&lt;/a&gt;杨元庆&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;世界第一高峰是什么吗？珠穆朗玛峰. 第二高峰呢？ 不知道。杨元庆：这就是我们成为第一的意义。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;无名&#34; href=&#34;#无名&#34;&gt;&lt;/a&gt;无名&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;哈佛大学行销学：男生对女生说：我是最棒的，我保证让你幸福，跟我好吧。—这是推销。男生对女生说：我老爹有3处房子，跟我好，以后都是你的。—这是促销。男生根本不对女生表白，但女生被男生的气质和风度所迷倒。—这是营销。女生不认识男生，但她的所有朋友都对那个男生夸赞不已。—这是品牌。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Git基础常用命令</title>
      <link>http://zhengyaotian.com/配置管理/Git%E5%9F%BA%E7%A1%80%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>2013-02-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;掌握本文中的常用命令，基本上可以覆盖80%的Git日常使用&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;创建版本库&#34; href=&#34;#创建版本库&#34;&gt;&lt;/a&gt;创建版本库&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;以下命令可以创建版本库&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mkdir dir&#xA;cd dir&#xA;git init&#xA;&#xA;git config --global user.name  &amp;quot;yaotian&amp;quot;&#xA;git config --global user.email  &amp;quot;yaotian@gmail.com&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;加remote-repository&#34; href=&#34;#加remote-repository&#34;&gt;&lt;/a&gt;加remote repository&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git remote add origin git@github.com:yaotian/doc.git # 设置仓库&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&amp;ldquo;origin&amp;rdquo;为远程repository的alias,在后面的命令中表示将表示这个远程的repository.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;br /&gt;&#xA;如果因为种种原因不能用git协议，而只能用https的话，这样带来一个问题，每次都需要输入用户名和密码，太麻烦了,解决办法如下&lt;/p&gt;&#xA;&#xA;&lt;p&gt;删除掉原来的remote的alias&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git remote rm origin    &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;增加新的&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git remote add origin https://{your name}:{you passwd}@github.com/yaotian/doc.git&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;查看当前有哪些remote-alias&#34; href=&#34;#查看当前有哪些remote-alias&#34;&gt;&lt;/a&gt;查看当前有哪些remote alias&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git remote -v&#xA;origin  git@github.com:yaotian/doc.git (fetch)&#xA;origin  git@github.com:yaotian/doc.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;查看目前所处的branch分支&#34; href=&#34;#查看目前所处的branch分支&#34;&gt;&lt;/a&gt;查看目前所处的branch分支&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git branch&#xA;* master&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;*表示当前的分支&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;提交代码&#34; href=&#34;#提交代码&#34;&gt;&lt;/a&gt;提交代码&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;touch README&#xA;git add . # 将当前目录添加到 git 仓库中， 使用 git add -A 则是添加所有改动的文档&#xA;git commit -m &amp;quot;Initial commit&amp;quot;    &#xA;&#xA;git commit -a  # 这个动作提交所有加入到本地仓库中的文件，对没有加入到本地仓库中的文件不生效。git add {文件}可以加入文件&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;取消提交&#34; href=&#34;#取消提交&#34;&gt;&lt;/a&gt;取消提交&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;如果发现有个文件提交错了，想从remote的仓库中删除，但还保留本地的话，可以采用以下命令&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git rm --cached {your file}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;把当前分支的代码提交到远程repository&#34; href=&#34;#把当前分支的代码提交到远程repository&#34;&gt;&lt;/a&gt;把当前分支的代码提交到远程repository&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git push origin master&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;将本地的branch “master” 提交到远程repository &amp;ldquo;origin&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Note:&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;当git push的时候会出现这个问题&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;! [rejected]        master -&amp;gt; master (non-fast-forward)&#xA;error: failed to push some refs to &#39;git@github.com:yaotian/doc.git&#39;&#xA;To prevent you from losing history, non-fast-forward updates were rejected&#xA;Merge the remote changes (e.g. &#39;git pull&#39;) before pushing again.  See the&#xA;&#39;Note about fast-forwards&#39; section of &#39;git push --help&#39; for details.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;解决办法是&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git fetch origin;git merge origin/master&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;分支相关操作&#34; href=&#34;#分支相关操作&#34;&gt;&lt;/a&gt;分支相关操作&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;如何创建分支&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git branch test&#xA;$ git branch&#xA;* master&#xA;test&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;进入某个分支&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git checkout test&#xA;$ git branch&#xA;  master&#xA;* test&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;merge分支&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git branch&#xA;  master&#xA;* test&#xA;&#xA;$ git checkout master&#xA;$ git branch&#xA;* master&#xA;  test&#xA;&#xA;git merge test&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;sublime中git插件的常用命令&#34; href=&#34;#sublime中git插件的常用命令&#34;&gt;&lt;/a&gt;sublime中git插件的常用命令&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ctrl+shift+p&#xA;git add Current file&#xA;git quick commit&#xA;git push current branch&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;git-subcomponent&#34; href=&#34;#git-subcomponent&#34;&gt;&lt;/a&gt;git subcomponent&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git submodule add  ssh://eyaotzh@gerritforge.lmera.ericsson.se:29418/sea-ui sea-ui&#xA;&#xA;if got error &amp;quot;fatal: You are on a branch yet to be born&amp;quot;, rm &amp;quot;.git/component/&amp;lt;your subcomponent&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;参考&#34; href=&#34;#参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://git-scm.com/book/zh&#34;&gt;Pro git 中文版&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>解决django中同步数据库时的编码问题</title>
      <link>http://zhengyaotian.com/Python/%E8%A7%A3%E5%86%B3django%E4%B8%AD%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;1、在后台控制面板里面建立一个数据库，先别急着做manage.py syncdb&#xA;2、到phpMyAdmin里面，在左边的列表中选中这个数据库&#xA;3、然后在右面那一行tab按钮中点击“操作”(Operations，那个带“工具箱图标”的tab)&#xA;4、打开新页面后在最下面Collation处选择utf8_general_ci，点击”Go”按钮&lt;/p&gt;&#xA;&#xA;&lt;p&gt;好了，现在你可以manage.py syncdb了，新生成的表都是utf-8编码，不会有数据库编码的问题了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>学习python</title>
      <link>http://zhengyaotian.com/Python/%E5%AD%A6%E4%B9%A0python/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;学习python&#34; href=&#34;#学习python&#34;&gt;&lt;/a&gt;学习python&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;给大家推荐一个好网站&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://chimera.labs.oreilly.com/books/1230000000393/index.html&#34;&gt;http://chimera.labs.oreilly.com/books/1230000000393/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;每个章节会搞一个小项目。很有实战体验。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>cron中python脚本不能执行</title>
      <link>http://zhengyaotian.com/Python/cron%E4%B8%ADpython%E8%84%9A%E6%9C%AC%E4%B8%8D%E8%83%BD%E6%89%A7%E8%A1%8C/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;看了一下root的邮件, 里面有信息, 说其中的脚本语法不对&lt;/p&gt;&#xA;&#xA;&lt;p&gt;SyntaxError: invalid syntax&lt;/p&gt;&#xA;&#xA;&lt;p&gt;研究后发现是cron中执行和我们的shell的执行环境不一样. 它找的python和我要的版本可能不一致.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;将cront中运行的python脚本前面加上python的实际路径. 问题解决&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>virtualenv的环境下lxml的安装</title>
      <link>http://zhengyaotian.com/Python/virtualenv%E7%9A%84%E7%8E%AF%E5%A2%83%E4%B8%8Blxml%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;在virtualenv的环境下直接pip install lxml会出错的。错误信息如下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;quot;libxml/xmlversion.h: No such file or directory&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;以下是解决办法&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install libxslt&#xA;apt-get install libxml2-dev&#xA;apt-get install libxslt1-dev &#xA;pip install lxml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>python写爬虫用selenium抓取js中生成的页面</title>
      <link>http://zhengyaotian.com/Python/python%E5%86%99%E7%88%AC%E8%99%AB%E7%94%A8selenium%E6%8A%93%E5%8F%96js%E4%B8%AD%E7%94%9F%E6%88%90%E7%9A%84%E9%A1%B5%E9%9D%A2/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;用通常的爬虫代码，只能抓取静态的文件，但现在的网页大量引入js，比如google，淘宝等网站，他们的数据都是动态生成的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;本文提供一种方法，来获取这样的数据。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;搭建环境ubuntu&#34; href=&#34;#搭建环境ubuntu&#34;&gt;&lt;/a&gt;搭建环境Ubuntu&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;pip install selenium&#xA;apt-get install xvfb&#xA;apt-get install firefox&#xA;Xvfb :1 -screen 0 1024x768x24 2&amp;gt;&amp;amp;1 &amp;gt;/dev/null &amp;amp;&#xA;apt-get install x11-xserver-utils&#xA;pip install pyvirtualdisplay&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;pyvirtualdisplay 为了解决Unix下display设置问题&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;演示代码&#34; href=&#34;#演示代码&#34;&gt;&lt;/a&gt;演示代码&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;from selenium import webdriver  &#xA;from selenium.common.exceptions import TimeoutException  &#xA;from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0   &#xA;import time  &#xA;from selenium.webdriver.common.by import By&#xA;&#xA;from pyvirtualdisplay import Display&#xA;display =Display(visible=0, size=(1024,768))&#xA;display.start()&#xA;&#xA;# Create a new instance of the Firefox driver   &#xA;driver = webdriver.Firefox()&#xA;      &#xA;# go to the google home page   &#xA;driver.get(&amp;quot;http://detail.tmall.com/item.htm?spm=a230r.1.10.9.ibBmHD&amp;amp;id=4149449273&amp;amp;ad_id=&amp;amp;am_id=&amp;amp;cm_id=&amp;amp;pm_id=&amp;quot;)  &#xA;        &#xA;# the page is ajaxy so the title is originally this:   &#xA;print driver.title  &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Virtualenv</title>
      <link>http://zhengyaotian.com/Python/Virtualenv/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;virtualenv&#34; href=&#34;#virtualenv&#34;&gt;&lt;/a&gt;Virtualenv&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;安装在Ubuntu&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install python-virtualenv&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;常用命令&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;使用之前先建立个虚拟环境，进入虚拟环境后安装软件&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;virtualenv --no-site-packages {folder}  &#xA;source {folder}/bin/activate&#xA;pip install Django==1.3  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Distributed OS</title>
      <link>http://zhengyaotian.com/工具/Distributed-OS/</link>
      <pubDate>2013-01-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;distributed-os&#34; href=&#34;#distributed-os&#34;&gt;&lt;/a&gt;Distributed OS&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;Everything is file. This is the original goal when Unix is created.  But later the distribution of UNIX did not follow this rule.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This document is to summary the cool OS that make &amp;ldquo;Everything is file&amp;rdquo; rule.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;plan-9&#34; href=&#34;#plan-9&#34;&gt;&lt;/a&gt;Plan 9&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;TODO&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;inferno&#34; href=&#34;#inferno&#34;&gt;&lt;/a&gt;Inferno&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Inferno is the commercial software but opensource.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Inferno can share the CPU and Memory between different machines?&lt;/h3&gt;&#xA;&#xA;&lt;h3&gt;Inferno can share the CPU and Memory between machines installed the different OS system? such as Windows7 and Linux&lt;/h3&gt;&#xA;&#xA;&lt;h3&gt;Can Inferno installed in Windows 7 run a MS Word application using CPU and Memory of another Linux system which also installed Inferno?&lt;/h3&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;reference&#34; href=&#34;#reference&#34;&gt;&lt;/a&gt;reference&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://plan9.bell-labs.com/plan9/&#34;&gt;plan 9 home page&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.just-pub.com/blog/2012/06/19/%E7%BC%96%E7%A8%8B%E7%8F%A0%E7%8E%91%E7%95%AA%E5%A4%96%E7%AF%87-k-plan-9-%E7%9A%84%E6%95%85%E4%BA%8B%EF%BC%88%E4%BF%AE%E8%AE%A2%E7%89%88%EF%BC%89/&#34;&gt;plan 9 good introduction chinese&lt;/a&gt;&#xA;&lt;a href=&#34;http://www.vitanuova.com/index.html&#34;&gt;Inferno&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>生活哲学</title>
      <link>http://zhengyaotian.com/眼界/%E7%94%9F%E6%B4%BB%E5%93%B2%E5%AD%A6/</link>
      <pubDate>2012-12-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;生活哲学&#34; href=&#34;#生活哲学&#34;&gt;&lt;/a&gt;生活哲学&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;序&#34; href=&#34;#序&#34;&gt;&lt;/a&gt;序&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;我不很聪明，但我愿意思考,我还很勤奋。好多事情我都比别人看明白的晚,但明白总比不明白好,有好多人一辈子都没活明白,我因此而庆幸。我愿意分享，希望只言片语能给大家带来帮助。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;本文探讨生活中的问题，以及探讨解决之道. 本文只适合那些真心过日子的，不适合混蛋。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;家事难&#34; href=&#34;#家事难&#34;&gt;&lt;/a&gt;家事难&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;俗话说，清官难断家务事。家务事和其他事有什么区别，怎么清官就断不了？&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;违反了法律，这人就有罪；违反了公司章程，这人就做错了事。家里没有法律，也没有公司章程，这就是难的原因。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;举个场景，丈夫这天工作上特别紧张和忙，解决了一个非常大的问题，到了家筋疲力尽，到了家就想躺下休息。可到了家后，妻子考虑到第二天家里要来客人，想把家里整理的干净一些。因为有些事，她一个人干不了,所以希望丈夫过来帮忙。丈夫说今天太累了，不想干，妻子不高兴，觉得她也上了一天班,也很累，收拾收拾家不也是为了这个家吗？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;站在哪个人的角度，目的都是好的，所以不能说谁对谁错。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;br&gt;&#xA;再举个场景,丈夫经常出差，妻子很多时间在陪孩子。有一天，妻子和丈夫在孩子的一个问题上观点不一致，每个人都觉得自己说的对，说到最后，妻子急了说，如果你觉得你说的对，你来带孩子，孩子也是你的儿子，你不应该多关心关心吗？你工作再忙，也得关心孩子呀.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这时候，丈夫应该说什么？妻子说的话没有错的地方呀？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这就是家事，每个人都抱着好的愿望和目的，在这个前提下所产生的矛盾和不快是最难处理的。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;家庭原则&#34; href=&#34;#家庭原则&#34;&gt;&lt;/a&gt;家庭原则&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&amp;ldquo;是否有利于夫妻感情&amp;rdquo;为第一原则。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;家庭里面有很多的亲情关系：孩子，老人，亲戚, 朋友, 当这些关系夹杂在一起的时候，人就会失去原则。一定要看清家庭的第一原则。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;夫妻关系不好的话，孩子还会好吗？其它关系还会好？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当把其他关系放在夫妻关系之上的话，一定是错误的。除非是独居。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如，有了孩子，有的父母对孩子的地位就上升到了第一位，为了孩子，其它都可以放一放, 其它的事情都将就将就。在我看来，什么都可以将就，但影响夫妻关系的事情不能将就。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;遇到矛盾，简单的方法：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这事是否影响夫妻感情，如果影响夫妻感情，那就要小心对待.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;如何经营夫妻关系&#34; href=&#34;#如何经营夫妻关系&#34;&gt;&lt;/a&gt;如何经营夫妻关系&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;不要希望在夫妻关系不好的情况下能处理好家庭中其它的关系。所以家庭中最重要的事情是去经营夫妻关系。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;常问自己和对方，你幸福吗？我幸福吗？这真的是我们想要的生活吗？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我们需要做些什么才能更有利于夫妻关系？&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;需要分工吗&#34; href=&#34;#需要分工吗&#34;&gt;&lt;/a&gt;需要分工吗&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;家庭一定要分工，没有分工就没有安宁。很多不和谐的家庭，大多是家里没有合理分工。 看到这里，闭眼想想，之前发生过的家庭矛盾都是什么？&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;怎么没做饭呀？怎么没接孩子呀？我忙成这样了，你怎么也不帮下手呀？我容易吗我，每天做家务，还要看孩子，你呢？&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;老字辈一直有这样的说法，男主外，女主内. 几千年下来的经验积累，这说法不无一定的道理的。其实说的就是分工,虽然现代人和老一辈已经有很大的差别，但分工还是需要的。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;何为分工？分工即为每个人各负其职，对某一方面负责，而不是都负责。想想看，你的家庭有分工吗？&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;在公司，如果没有分工，那就是一团糟。因为分工不明确，人和人之间就会相互埋怨，相互扯皮。所谓，三个和尚没水喝。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在家庭，如果没有分工，就会产生矛盾。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;刚才提到了，社会有法律，公司有章程，才能秩序井然，因为这样才能轻易分清对与错,是与非。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;家里没有法律，也没有章程，而且都带着好的愿望，如何判断谁对谁错？这就是矛盾的根本。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;谁嘴皮子溜，谁就占上风。当男人嘴皮子不占上风的时候，那结果就可怕,就容易产生家庭暴力。你可以观察一下身边有暴力的家庭,通常是女方能说会道。那些因为&amp;rdquo;性格不和,丈夫打人，最终离婚”的家庭基本都是基本如此。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;但如果有了分工，那就是有了规则，家庭就有了判断对错是非的依据和准则，就会大量减免家庭矛盾。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;具体做法：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;家里成员各负其职，每人都像公司的一个经理，各人对自己负责的事情有决定权，其他人只有建议权. 但还要各部门之间通力合作，完成公司目标&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;让我们来看看开头的两个家庭的例子该如何解决。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先，对家庭成员进行分工：丈夫负责家庭的最大现金流和资金保障，就像公司里的销售经理,妻子负责家庭环境，负责孩子. 就像公司里的后勤部长&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第一个例子，后勤部长会因为销售经理不来帮做后勤而投诉他吗？后勤部长只有当没有资金做后勤的时候才会投诉销售经理。所以妻子可以决定家庭什么时候需要清理，如何进行清理,这事情妻子说了算。妻子思考问题的方式是:是否我可以完成，如果不行，该如何请别人来帮助。这样的话，解决办法的思路是先征求丈夫意见可不可以起来搞卫生，如果丈夫不行，就去请钟点工来帮助。如果家里请不起钟点工，那就是丈夫的责任；如果妻子想不起来去请钟点工，那就是妻子的责任。(这时候，有人会说，家里有人，还请钟点工，这不是浪费钱吗？想想家庭第一原则，如果影响夫妻感情的话，钱还那么重要吗）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第二个例子，因为妻子负责孩子，所以丈夫的所有的说辞都是给妻子的建议，最后决定应该由妻子来做,丈夫只有建议权。 所以，如果丈夫要妻子必须听他的，那就是他有问题，越权了。如果妻子非要丈夫来照看孩子， 那就是妻子的问题. 家里请不起保姆，那是丈夫的问题。 (这时候，有人会说，丈夫一点都不管孩子呀？多轻松呀？这句话就好比后勤部长说销售部长都不用搞后勤，销售部长多轻松呀？)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;看，家里有了规则，是不是解决问题变的很简单了？&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;如何分工&#34; href=&#34;#如何分工&#34;&gt;&lt;/a&gt;如何分工&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;上面讲了需要分工，那么如何分工？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;其实简单，想想单位里是如何分工的？经理会根据个人特点和擅长，尽量安排员工擅长的事情，这样才能利益最大化。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;家里的分工也一样，看个人的特点。男人不一定非要当销售经理，女人也不一定非要当后勤部长。看个人的特点和能力，目标都是把日子过好。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;具体做法：&lt;/em&gt;&lt;/strong&gt;&#xA;年初将几年要做的所有事情都列出来。这里是指所有的事情，包括工作和家庭，包括休假计划，包括可以看到的所有的活动。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;夫妻双方就这些事情选择自己愿意做的，对其负责。“负责”是指可以对这件事做决定，但必须可以单独思考完成这个事，包括寻找资源，并能有详细且有说服力的计划，计划是分到每个月的具体任务。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当每个月回顾的时候，这些具体任务没有被完成，说明计划或该经理有问题，呵呵，需要重新讨论。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当然，可以不选择任何事情，那是混蛋，本文不适合这类人。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;何为相互理解,-善解人意&#34; href=&#34;#何为相互理解,-善解人意&#34;&gt;&lt;/a&gt;何为相互理解, 善解人意&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;您善解人意吗？100%的人的答案都是“是的，我很善解人意”&lt;/p&gt;&#xA;&#xA;&lt;p&gt;那您如何“善解人意”?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;每个人可能都有不同的答案。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在我看来，善解人意在家庭中的体现就是清楚知道自己的职责，也清楚对方的职责,互相帮助， 站在对方考虑问题&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;谁当家&#34; href=&#34;#谁当家&#34;&gt;&lt;/a&gt;谁当家&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;谁当家不是不是谁管钱。 且不一定必须是男人当家，女人也可以当家。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当家之人，要知道张罗这么几件事情&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计划, 一年的计划怎么安排，3年计划怎么安排&lt;/li&gt;&#xA;&lt;li&gt;实施，每一项计划如何落实到每个月的行动上&lt;/li&gt;&#xA;&lt;li&gt;每个月要做回顾,这个月过的如何，有无需要改进，促膝谈心。并看下一个如何安排&lt;/li&gt;&#xA;&lt;li&gt;当遇到有困难的时候，要有主见&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;其实，说谁当家并不重要，重要的是需要有个人考虑以上的事情。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;如何管理保姆&#34; href=&#34;#如何管理保姆&#34;&gt;&lt;/a&gt;如何管理保姆&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;让别人为自己服务，本身就是一门学问.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;加上保姆工作特殊，和普通的上班雇员不一样, 让保姆很好的工作，更需要技巧.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;举例：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;家里有婴儿，需要人照顾，所以到家政公司请来保姆照顾小孩，因为是照顾小孩，比较辛苦，也很需要责任心，所以比平常的保姆的费用要贵很多。并跟保姆说好，除了带小孩，家里的清洁等在不带孩子的时候也需要做。谈了固定工资3000.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;到家第一天，保姆很积极，显示出很有能力。积极主动和孩子玩耍，干活也很麻利。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;过了一周, 保姆和孩子玩耍没那么积极，干活也没那么积极。家里老人开始埋怨保姆。保姆开始有情绪,态度还好，说什么都说改,可效果不明显。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;孩子肯定喜欢和自己的父母玩耍，过了两周，保姆有意无意的将孩子往父母身旁带，一旦孩子和父母玩耍，就主动开始做杂活. 意味着，干杂活多于带孩子。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;妻子对保姆也开始不满意，有什么事开始不喊保姆，开始喊丈夫，因为丈夫做的比保姆好。于是丈夫更多的开始分担原本保姆应该做的事。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第一天和两周后有很大的差距。用照顾小孩的价格找了个干杂活的保姆。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;后来换了很多保姆，情况都近似。由此得出结论，没有保姆可以带好孩子的，他们都不会给你好好照顾孩子，并上升到亲缘关系：毕竟他们不是自家人。问其原因，并商量如何办，回答：没有办法，他们都是外人，不可能尽心的，再换保姆也没有用，因为找了这么多的保姆，都是这样。(看出逻辑上的问题了吗？)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;从头到尾，看上去保姆在偷奸耍滑，不好好干活。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果一个保姆是这样，说明这个保姆品质有问题，但如果很多保姆都出现这个问题，就应该思考一下原因。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;打个比方，有一名员工，因为业务能力强，被提拔成经理，管理手下的10位员工，既然是人，他们肯定有各自的差异，既然这个经理业务能力很强，肯定会看不惯这些员工的很多做法。可如果因为这些员工有这样那样的问题，都将他们辞了，那这位经理靠谁来干活呢？谁都愿意干最少的活，拿最多的钱。如何让员工发挥最大的能力？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;实际上，这就是管理学中的如何管理员工问题,有很多的内容，这里不赘述，回到保姆问题。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;具体方法：&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;找保姆要有标准，首先要非常明确找什么样的保姆，保姆过来做什么。“找个好保姆”，非常不明确。要具体说出需要什么样的保姆，不具备这样的条件，肯定不能要。有了这个依据就好办了。这是标准。要承认人是有个体差异的，要认识到人一定会犯错误的。那些错误只要不违反这个标准，都可以接受，都不是大问题，能睁一只眼闭一只眼，或者让其更改，不需要有情绪，情绪是会影响人的，没有会在训斥中能干好活。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;有了标准就需要明确职责。明确提醒保姆过来是干什么的。主要是照顾小孩，还是打扫卫生? 显然就这个例子来看，根据价格，应该是主要照顾小孩。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;明确做事方法。要明确告诉保姆如何做事。比如，告诉她你主要是照顾小孩的。在照顾孩子和干杂活之间，她要首先选择在孩子的身边，除非别人吩咐你干别的.这样的话，保姆就知道家里人对她有个做事的标准。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;明确好坏标准。要让保姆知道做到什么程度是好，什么程度是差。一定要有标准。标准一定要具体。比如，在孩子的心目中有一定的地位为一个层次。孩子离不开这个保姆，这算更高的层次。我们家和孩子都离不开这个保姆，这算更高的层次。如果家庭成员对其有意见，这算不好等等。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;奖励和惩罚。这个非常重要，保姆出来干活大多为了挣钱，大多数的保姆都希望通过自己的努力能多挣钱。如果她觉得干的好和干的不好都一样，她还会有动力吗？人是不能没有希望的。对于保姆来将，这个希望就是，她能通过努力，能挣更多的钱。要给她这个希望，就要告诉她奖励和惩罚，根据第三中定的标准，来给保姆说明，到了每个层次都会给她涨工资，也会因为做错事而扣工资。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;定期考核。发工资之前进行考核,做的好要表扬，做的差要批评。告诉她这周为什么扣了她钱，为什么发奖金,扣钱和发奖金可以同时进行。每月的工资一定不能固定。&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;感情投资。毕竟住在一起，所以也应该给些小恩小惠，促进关系。水果呀，糖果呀等。&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;是否要和父母住在一起&#34; href=&#34;#是否要和父母住在一起&#34;&gt;&lt;/a&gt;是否要和父母住在一起&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;只要夫妻双方有一方不愿意，就不能和父母住一起。（当然父母生病需要人照顾除外）,因为这和家庭第一原则相违背。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先要考虑清楚，和父母住在一起的目的是什么？会加深感情吗？和父母住一起产生的矛盾多还是不住在一起产生的矛盾多？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这里会有个误区，不住在一起，就觉得是对父母的不孝顺。其实更应该考虑，住在一起，就是对父母孝顺吗？有一方不情愿的情况下，住在一起能更加加深双方的感情吗？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在这个问题上，我们需要尊重一些事实（不管愿意不愿意相信，他们是存在的）:&lt;br /&gt;&#xA;1.夫妻能走在一起是很奇妙的，他们互相吸引，互相喜欢。但这不意味着，这对夫妻和双方的父母能有这样的喜欢和吸引.有的父母和他们的子女的性格相差非常大.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.父母对待小两口的问题上,不管承认和不承认，一定会有差别。这种差别，在日常的琐事中被放大。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.亲生的怎么骂怎么打都不会记仇，但媳妇和女婿的关系上就不一样。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.年轻人和老年人在观念上，生活方式上有区别，会产生矛盾。有了矛盾处理不好，就会伤感情。年轻人和老年人的关系不好，又会影响年轻人之间的关系。年轻人之间关系紧张，其它的关系更没法处理。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;处理方式：&lt;br /&gt;&#xA;在处理这样关系的问题上,关键人物就是这个亲生的子女，他/她的处理方式非常关键。比如婆婆和媳妇有矛盾，这个亲生儿子一定要把责任揽到自己身上！！说谁的错都是错,事后两边解释说明。&lt;strong&gt;难于沟通的事情也必须由这个亲生的子女来出面才对。因为亲生的不会记仇，说话可以说透说直接不用避讳&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;如何教育孩子&#34; href=&#34;#如何教育孩子&#34;&gt;&lt;/a&gt;如何教育孩子&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;(未完)&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;什么是吵架&#34; href=&#34;#什么是吵架&#34;&gt;&lt;/a&gt;什么是吵架&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;沟通，双方交流的内容是事实，以及自己对事实的看法。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果双方只说看法，不交流信息和事实。那就是吵架&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(未完)&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;谁管钱&#34; href=&#34;#谁管钱&#34;&gt;&lt;/a&gt;谁管钱&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;这个问题估计不少家庭有过讨论。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;管钱的需要在年初制定初步的使用计划，包括如何投资，如何花费等等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;另，一个季度换一次人来管，对家庭财务有个认识，也防止双方在经济上产生隔阂。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(未完)&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;关于信任&#34; href=&#34;#关于信任&#34;&gt;&lt;/a&gt;关于信任&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;在信任问题上，很欣赏美国人的做法，他们愿意相信每个人，但一旦发现某个人撒了谎，那么就再也不相信他/她。这就是诚信的重要性。诚信是一种品质。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;另外需要尊重这样的事实：&lt;br /&gt;&#xA;三岁的孩子能骗的了你吗？当然不能，因为你掌握的信息比他全，你的智商比他强。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你能保证其他人的信息都没你全？其他人的智商都没你高？否则就不能保证你可以隐瞒事实。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;家庭中，双方长期生活在一起，是不可能有秘密的，有些事情也许不是问题，也许无关大雅，也许。。。,但肯定的是不可能隐瞒。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;总之，建议坦诚相待，共同对待生活。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;2012&lt;/sup&gt;&amp;frasl;&lt;sub&gt;11&lt;/sub&gt; 于北京&#xA;Yaotian&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>做一个有主见的人</title>
      <link>http://zhengyaotian.com/眼界/%E5%81%9A%E4%B8%80%E4%B8%AA%E6%9C%89%E4%B8%BB%E8%A7%81%E7%9A%84%E4%BA%BA/</link>
      <pubDate>2012-12-08 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;为什么有这个思考&#34; href=&#34;#为什么有这个思考&#34;&gt;&lt;/a&gt;为什么有这个思考&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;一个非常普通的石头，居然被人骗卖了10万。随机被拨的电话，通过语言就可以被轻松骗走几十万。这些发生在身边有些人，会被一些看似非常没有逻辑和道理的事情所骗;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有些人人云亦云,别人说什么就信什么；&lt;/p&gt;&#xA;&#xA;&lt;p&gt;别人要求做什么就做什么。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有些人不会自己做决定；&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有些人遇到困难却手足无措，没了主意。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;做什么事情，没有自己的见解，询问别人如何做。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;实际上，这些的根源是自己没有主见。没有主见的人是很容易被别人说服和欺骗的。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;有主见的人是什么样？&#34; href=&#34;#有主见的人是什么样？&#34;&gt;&lt;/a&gt;有主见的人是什么样？&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;对事物有自己的看法和见解，而且这些看法和渐渐是有事实依据的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;见解的产生是基于一定的事实，并且合乎一定的逻辑的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有独立思考能力。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;如何做一个有主见的人&#34; href=&#34;#如何做一个有主见的人&#34;&gt;&lt;/a&gt;如何做一个有主见的人&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;首先，要了解别人给了你哪些信息其实,一般的语言交流内容可以分为这么几类：&#xA;1.个人喜好,比如，我喜欢黑色&#xA;2.描述事实, 比如，今天我遇到一件事情。。。&#xA;3.称述观点, 比如，我认为，我觉得，。。。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对于个人喜好，一般不需要特别关注。&#xA;对于描述的事实，一般需要关注这个是否是一个事实。&#xA;对于描述的观点，要特别的注意，要思考一下这个观点来自于什么事实，除了这个之外，还需要思考一下得出这个观点的逻辑，要判断这个逻辑对不对。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;“这个石头非常珍贵，是我祖上传下来的，因为最近资金有点紧张，所以想出给喜欢的人{省略千字，描述这个石头的历史和好。。。},这石头在市场在卖可能得15万，因为着急，我就卖5万” 在菜市场，经常有些拿着些旧石头说这些话。而且说的时候，旁边有些人符合，有些人还假装要掏钱等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;当别人因为某件事和你交流的时候，&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第一步需要确定的是他描述的是他的事实还是观点。&#xA;显然这是他的观点，他在说这石头很好，希望有人买它。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第二步是确定支撑观点的事实是否成立&#xA;为什么石头很好？祖上留下来就是好的？他描述的都是事实吗？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第三步就是确定其中的逻辑&#xA;因为你说这石头好，所以这个石头就好？&#xA;因为资金紧张，所以到菜市场卖石头？没有其它更方便募集资金的方式？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;通过这三个步骤，还会有人买这个石头？&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Ghost</title>
      <link>http://zhengyaotian.com/眼界/Ghost/</link>
      <pubDate>2012-12-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;Ghost&lt;/p&gt;&#xA;&#xA;&lt;p&gt;一个开源博客， 看了一下，太简单了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;真奇怪，这样的系统怎么会被炒这么火&lt;/p&gt;&#xA;&#xA;&lt;p&gt;网站在这里&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://ghost.org/&#34;&gt;http://ghost.org/&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>配置VPS搭建web服务器</title>
      <link>http://zhengyaotian.com/配置管理/%E9%85%8D%E7%BD%AEVPS%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>2012-10-15 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;在Burst net购买 VPS XEN 512M。 一个月7.9美金。买XEN的原因是这个类型的VPS是不会超卖的。所以比其它的稍贵。在BurstNet上最便宜的为5.9美金。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;选择VPS位置为LOS的，美国西海岸，网络速度会比较好。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;系统为Ubuntu的最新版本。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;apt-get-update&#34; href=&#34;#apt-get-update&#34;&gt;&lt;/a&gt;apt-get update&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;做一次更新&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;apt-get-install-git&#34; href=&#34;#apt-get-install-git&#34;&gt;&lt;/a&gt;apt-get install git&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;安装git. 现在哪能离得开这个呀&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;安装google-go环境。&#34; href=&#34;#安装google-go环境。&#34;&gt;&lt;/a&gt;安装google go环境。&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;先看一下主机的CPU类型&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;lscpu&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;显示如下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Architecture:          x86_64&#xA;CPU op-mode(s):        32-bit, 64-bit&#xA;Byte Order:            Little Endian&#xA;CPU(s):                1&#xA;On-line CPU(s) list:   0&#xA;Thread(s) per core:    1&#xA;Core(s) per socket:    1&#xA;CPU socket(s):         1&#xA;NUMA node(s):          1&#xA;Vendor ID:             GenuineIntel&#xA;CPU family:            6&#xA;Model:                 44&#xA;Stepping:              2&#xA;CPU MHz:               2400.144&#xA;BogoMIPS:              4800.28&#xA;Hypervisor vendor:     Xen&#xA;Virtualization type:   para&#xA;L1d cache:             32K&#xA;L1i cache:             32K&#xA;L2 cache:              256K&#xA;L3 cache:              12288K&#xA;NUMA node0 CPU(s):     0    &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;说明是 x86, 64位平台&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;下载google go源代码并编译&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;下载源代码及编译&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install python-setuptools python-dev&#xA;easy_install mercurial&#xA;hg clone -r release https://go.googlecode.com/hg/ $GOROOT&#xA;&#xA;cd GOROOT/src&#xA;./all.bash&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;成功编译后，将GOROOT/bin加入到你的path中&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;安装lnmp&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget http://soft.vpser.net/lnmp/lnmp0.9-full.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;解压缩后,编译安装&#xA;    ubuntu.sh&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;配置virtualenv&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install python-virtualenv&#xA;virtualenv --no-site-packages dj1.3&#xA;source {folder}/bin/activate&#xA;pip install Django==1.3  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;安装flup&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;为了fastcgi&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;安装 MySQL-Python&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install libmysqld-dev&#xA;apt-get install libmysqlclient-dev&#xA;python setup.py  install&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;mysql的数据的转移&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mysqldump -u root -p car &amp;gt; car.sql&#xA;mysql -u root -p car &amp;lt; car.sql&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Git快速提交</title>
      <link>http://zhengyaotian.com/配置管理/Git%E5%BF%AB%E9%80%9F%E6%8F%90%E4%BA%A4/</link>
      <pubDate>2012-10-15 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;Git的作用不单单是代码管理了。它被扩展成用来管理任何文本，例如markdown文档等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;但文档做了修改后，提交修改基本上需要git fech, git add, git commit, git push这些步骤。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这个步骤对于一个小的文档修改来说太繁琐了。所以想了个办法来简化这个工作。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;修改.bash_profile&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;vi .bash_profile&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;加入一下内容&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;alias g0=&#39;git fetch origin;git merge origin/master&#39;&#xA;alias g1=&#39;git add -u;git add *&#39;&#xA;alias g2=&#39;git commit -m &amp;quot;`date`&amp;quot;&#39;&#xA;alias g3=&#39;git push origin master&#39;&#xA;alias ga=&#39;g0,g1,g2,g3&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这样修改完文档后，直接ga就可以完成整个提交&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Install Go into CentOS</title>
      <link>http://zhengyaotian.com/golang/Install-Go-into-CentOS/</link>
      <pubDate>2012-10-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;install-go-into-centos&#34; href=&#34;#install-go-into-centos&#34;&gt;&lt;/a&gt;Install Go into CentOS&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;Go没有CentOS的下载包，需要从源代码安装。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;好多文章的介绍列了一长串的步骤。看了一下主要是安装了hg什么的，这些步骤主要用来下载源代码的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;以下是对go1.0.3的安装过程&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1.下载源代码&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget http://go.googlecode.com/files/go1.0.3.linux-amd64.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;2.解压缩，到src目录下运行all.bash&lt;/p&gt;&#xA;&#xA;&lt;p&gt;编译成功的话，恭喜你。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.将你的go目录移到任何一个目录下。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.设置环境变量&#xA;在~/.bashrc加入&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export GOROOT=/usr/local/go&#xA;export PATH=$PATH:/usr/local/go/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Distributed OS</title>
      <link>http://zhengyaotian.com/工具/Distributed-OS/</link>
      <pubDate>2012-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;有一个很好的工具, fences, 有免费版本.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;可以很好地将桌面的图标整理清楚, 好用&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>右键菜单反应慢，资源管理器打开慢</title>
      <link>http://zhengyaotian.com/工具/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E5%8F%8D%E5%BA%94%E6%85%A2%EF%BC%8C%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E6%89%93%E5%BC%80%E6%85%A2/</link>
      <pubDate>2012-09-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;打开资源管理器很慢才有反应？右键菜单反应比较慢？你的机器需要优化了。以下是其中的优化方法，有效&lt;/p&gt;&#xA;&#xA;&lt;p&gt;vista系统占用资源比较多，可能你的配置也不高，需要优化下。&#xA;Vista操作系统中要加快启动和运行速度其实很简单：&#xA;1、更新你的硬件驱动&#xA;比如显卡，主板的显示芯片等等。这个很关键，多去检查一下自己的硬件有没有驱动更新。&#xA;2、取消Windows部分程序&#xA;打开控制面板，选择卸载程序，点击左侧列表中的打开或关闭Windows功能，之后清除不必要的功能选项，鼠标移动上去时会有功能提示。 设置完成后需要重启。&#xA;3、使用Vista优化大师&#xA;国内第一款专业优化Windows Vista的软件工具，被誉为Window Vista系统中的瑞士军刀，400多项超强设置!&#xA;4、关闭部分服务&#xA;在开始菜单中输入 services.msc 打开服务列表，对于每项服务可以选择右键，属性中启动类型设置是否自动运行或者手动和禁用。推荐关闭：&#xA;Computer Browser&#xA;Distributed Link Tracking Client&#xA;IKE and AuthIP IP Keying Modules&#xA;Offline Files&#xA;Remote Registry&#xA;Tablet pc Input Service (unless you’re using a tablet PC)&#xA;Windows Error Reporting&#xA;5、关闭自动运行程序&#xA;开始菜单中输入msconfig，选择启用，其中为随电脑启动自动运行的程序列表。杀毒软件也是不能取消的。&#xA;6、关闭系统托盘程序&#xA;除了随机启动的程序，有些程序是在系统托盘加入图标的，而相当一部分却没有什么用途，比如网络连接，QuickTime的图标等，可以在上一步骤中去除，同时这里也可以右键在选项里进行设置不自动运行，或者不加载。&#xA;7、使用ReadyBoost&#xA;如果你有大容量USB Flash闪存，那么插入它在右键属性里设置吧，可以当成虚拟内存来使用，比硬盘的虚拟内存要快得多。&#xA;8、加速系统界面&#xA;Vista的广告wow便是炫耀它有多华丽，但代价便是高配置和高系统消耗，关掉些效果会加速不少。右键选择个性化，在Windows 颜色和外观中取消”启用透明效果”，或者干脆换掉Aero为Vista基本或者标准。Sidebar就关了吧，没用。右键选择计算机，选择属性，点击左侧的”高级系统设置”，”高级”，”设置”，”视觉效果”这个里面能关啥就关啥吧，设在难看得受不了再打开。&#xA;9、高级设置&#xA;如果你的主板和硬盘支持SATA，那么在驱动器的属性里设置打开高级效果吧。&#xA;update: 桌面或者开始菜单中的计算机右键选择属性，之后在左侧选择“设备管理器”，在列表磁盘驱动器里找到支持SATA的硬盘驱动器，右键选择属性，在“策略”中选择“启用高级性能”，当然上面的“启用缓存”也要选中。&#xA;关闭Vista自动扫描驱动器并且在容量过小时的警告：备份注册表，然后开始菜单输入regedit，KEY_CURRENT_USER\Software\microsoft\Windows\CurrentVersion\PolicIEs中，右侧右键选择新建项，名称为Explorer，在其下，右侧右键选择新建”DWord (32-bit)值“，名称为NoLowDiskSpaceChecks，双击修改数值为“1”。&#xA;10、整理磁盘&#xA;推荐使用AusLogics来整理硬盘，如果你平时用电脑复制删除什么的挺频繁，那还是每隔几个月弄下吧，很有效果，跟在家里乱丢东西一样，时间长了当然找到它要慢，所以要定期整理。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>To install the Hadoop to Linux for design</title>
      <link>http://zhengyaotian.com/大数据/To-install-the-Hadoop-to-Linux-for-design/</link>
      <pubDate>2012-08-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;to-install-the-hadoop-to-linux-for-design&#34; href=&#34;#to-install-the-hadoop-to-linux-for-design&#34;&gt;&lt;/a&gt;To install the Hadoop to Linux for design&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;This is a summary of hadoop stuff by Yaotian. If you have question or correction, please infor me.&#xA;Email: yaotian.zheng@ericsson.com&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;preparation:&#34; href=&#34;#preparation:&#34;&gt;&lt;/a&gt;Preparation:&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;1.Linux server&#xA;2.hadoop 0.20.2 ( It&#39;s stable version.)&#xA;3.unzip hadoop to /opt/hadoop.0.20.2 and make ln to /opt/hadoop&#xA;    ln -s /opt/hadoop.0.20.2 /opt/hadoop&#xA;4.Install openjdk&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;steps:&#34; href=&#34;#steps:&#34;&gt;&lt;/a&gt;Steps:&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;a. Need sshd and install it&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;apt-get install ssh&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And have a test&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ssh localhost&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;b. To create an account like &amp;ldquo;hadoop&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;useradd -m -U hadoop&#xA;passwd hadoop&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And have a test&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;su hadoop&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;c. To generate the authorizated keys so that user can login the server without password. Before that login as &amp;ldquo;hadoop&amp;rdquo; or su to &amp;ldquo;hadoop&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;su hadoop&#xA;ssh-keygen -t rsa -P &#39;&#39; -f ~/.ssh/id_rsa&#xA;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And have a test, which is supposed not need any password&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ssh localhost&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;d. If you run the hadoop as root before, you may need change the owner of the folder so that the hadoop can be run by &amp;ldquo;hadoop&amp;rdquo; account&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;chown -R hadoop:hadoop /opt/hadoop-0.20.2/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;e. To update some files of hadoop&lt;/p&gt;&#xA;&#xA;&lt;p&gt;conf/hadoop-env.sh and update following:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export JAVA_HOME=/usr/lib/jvm/java-6-openjdk&#xA;export HADOOP_HOME=/opt/hadoop&#xA;export PATH=$PATH:/opt/hadoop/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;conf/core-site.xml and add following:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  &amp;lt;property&amp;gt;&#xA;          &amp;lt;name&amp;gt;fs.default.name&amp;lt;/name&amp;gt;&#xA;          &amp;lt;value&amp;gt;hdfs://localhost:9000&amp;lt;/value&amp;gt;&#xA;  &amp;lt;/property&amp;gt;&#xA;  &amp;lt;property&amp;gt;&#xA;           &amp;lt;name&amp;gt;hadoop.tmp.dir&amp;lt;/name&amp;gt;&#xA;           &amp;lt;value&amp;gt;/tmp/hadoop/hadoop-${user.name}&amp;lt;/value&amp;gt;&#xA;  &amp;lt;/property&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;conf/hdfs-site.xml and add following:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  &amp;lt;property&amp;gt;&#xA;          &amp;lt;name&amp;gt;dfs.replication&amp;lt;/name&amp;gt;&#xA;          &amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;&#xA;  &amp;lt;/property&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;conf/mapred-site.xml&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  &amp;lt;property&amp;gt;&#xA;    &amp;lt;name&amp;gt;mapred.job.tracker&amp;lt;/name&amp;gt;&#xA;    &amp;lt;value&amp;gt;localhost:9001&amp;lt;/value&amp;gt;&#xA;  &amp;lt;/property&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;f. To format the namenode&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;bin/hadoop namenode -format&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;*If you get the error, maybe you need check if the /tmp/hadoop is the root permission. If that, su to root and delete it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;g. To start hadoop&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;bin/start-all.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And have a test. This is the admin web interface&#xA;    &lt;a href=&#34;http://localhost:50030/&#34;&gt;http://localhost:50030/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;h. To stop haddop&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;bin/stop-all.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Oozie使用</title>
      <link>http://zhengyaotian.com/大数据/Oozie%E4%BD%BF%E7%94%A8/</link>
      <pubDate>2012-08-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;(口号：&amp;rdquo;简单，易懂，直接，浓缩, 趣味&amp;rdquo;， 痛恨一些技术文档，将一些简单的问题，非要用一些晦涩难懂的语言来描述，或者非要用一些专用语言或缩写，以显得比较专业，却忘记了文档本身的目的是为了更好的让别人理解。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;就目前对Oozie的了解，Oozie就像一个快递中心，将任务分发给不同的业务人员去，同时还可以查看这些任务的状态&lt;br /&gt;&#xA;这里的业务人员就是一个个的Hadoop平台&lt;/p&gt;&#xA;&#xA;&lt;p&gt;使用到的软件&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;hadoop 0.20.205.0&lt;/li&gt;&#xA;&lt;li&gt;oozie  3.2.0&lt;/li&gt;&#xA;&lt;li&gt;extjs  2.2&lt;/li&gt;&#xA;&lt;li&gt;maven  3.0.4&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;下载及编译&#34; href=&#34;#下载及编译&#34;&gt;&lt;/a&gt;下载及编译&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget http://mirrors.gigenet.com/apache/incubator/oozie/stable/oozie-3.2.0-incubating.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;悲催的是java写的东东居然还需要下载下来编译， 所以需要有maven3的环境&lt;/p&gt;&#xA;&#xA;&lt;p&gt;配置maven3很简单，下载zip包后解压到某目录下，然后配置两个环境变量&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export M3_HOME={you maven folder}&#xA;export Path=$Path:$M3_HOME/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;到{Oozie home}/bin目录下运行&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mkdistro.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;如果失败的话，从失败的地方重新运行可以用命令：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mkdistro.sh -ff&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; 用mvn package 只生成每个component的target目录下的东东，不会在distro目录下生成最终的完整oozie（这点比较悲催）&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;安装&#34; href=&#34;#安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;简单，直接将distro目录下的东东拷贝到你的生产路径下就可以了&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;配置&#34; href=&#34;#配置&#34;&gt;&lt;/a&gt;配置&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;配置Hadoop&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;{hadoop home}/conf/core-site.xml 加入以下内容&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;property&amp;gt;&#xA;  &amp;lt;name&amp;gt;hadoop.proxyuser.hadoop.hosts&amp;lt;/name&amp;gt;&#xA;  &amp;lt;value&amp;gt;{your server}&amp;lt;/value&amp;gt;&#xA;&amp;lt;/property&amp;gt;&#xA;&amp;lt;property&amp;gt;&#xA;  &amp;lt;name&amp;gt;hadoop.proxyuser.hadoop.groups&amp;lt;/name&amp;gt;&#xA;  &amp;lt;value&amp;gt;hadoop&amp;lt;/value&amp;gt;&#xA;&amp;lt;/property&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;此处的value为运行job所在的机器名和hadoop所在的group名。不能用*&lt;br /&gt;&#xA;这个步骤配置不对的话， 会出现&amp;rdquo;hadoop is not allowed to impersonate hadoop&amp;rdquo;问题&lt;/p&gt;&#xA;&#xA;&lt;p&gt;别忘记copy配置文件到slave, 重启启动Hadoop&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;修改及配置Oozie&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;修改{OOZIE_HOME}/conf/oozie-site.xml&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;property&amp;gt;&#xA;    &amp;lt;name&amp;gt;oozie.services.ext&amp;lt;/name&amp;gt;&#xA;    &amp;lt;value&amp;gt;&#xA;        org.apache.oozie.service.HadoopAccessorService&#xA;    &amp;lt;/value&amp;gt;&#xA;    &amp;lt;description&amp;gt;&#xA;    To add/replace services defined in &#39;oozie.services&#39; with custom implementations.Class names must be separated by commas.&#xA;    &amp;lt;/description&amp;gt;&#xA;&amp;lt;/property&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;如果你暂时不配置数据库的话，需要让Oozie自动创建数据库，所以要修改下面内容：将false改为true&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    &amp;lt;property&amp;gt;&#xA;        &amp;lt;name&amp;gt;oozie.service.JPAService.create.db.schema&amp;lt;/name&amp;gt;&#xA;        &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;&#xA;        &amp;lt;description&amp;gt;&#xA;            Creates Oozie DB.&#xA;&#xA;            If set to true, it creates the DB schema if it does not exist. If the DB schema exists is a NOP.&#xA;            If set to false, it does not create the DB schema. If the DB schema does not exist it fails start up.&#xA;        &amp;lt;/description&amp;gt;&#xA;    &amp;lt;/property&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;否则你会遇到以下问题&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Caused by: org.apache.openjpa.lib.jdbc.ReportingSQLException: Schema &#39;SA&#39; does not exist&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;修改{OOZIE_HOME}/conf/oozie-env.sh&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export OOZIE_HTTP_HOSTNAME={your host}&#xA;export OOZIE_HTTP_PORT={your Oozie port}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;Setup Oozie&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;{OOZIE_HOME}/bin/oozie-setup.sh -hadoop 0.20.200 {HADOOP_HOME} -extjs {/PATH/TO}/ext-2.2.zip&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;启动Oozie&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ {OOZIE_HOME}/bin/oozie-start.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;当然第一次启动你希望看看启动的时候的一些信息， 你可以用&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ {OOZIE_HOME}/bin/oozie-run.sh &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这个时候您应该可以访问 http://{your host}:9010 访问oozie的页面&#xA;恭喜您，可以使用了。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;使用oozie&#34; href=&#34;#使用oozie&#34;&gt;&lt;/a&gt;使用Oozie&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;上面花了这么长的时间搞出来，现在是享受成果的时间&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;运行map-reduce&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;将您的任务代码拷贝到oozie的目录下，建议的目录结构为&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;app    &#xA;  --lib    &#xA;    --your jar file   &#xA;  --job.properties    &#xA;  --workflow.xml   &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;job.properties&lt;/h4&gt;&#xA;&#xA;&lt;h4&gt;workflow.xml&lt;/h4&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;参考&#34; href=&#34;#参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://incubator.apache.org/oozie/map-reduce-cookbook.html&#34;&gt;map-reduce in oozie&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Hadoop Tuning</title>
      <link>http://zhengyaotian.com/大数据/Hadoop-Tuning/</link>
      <pubDate>2012-08-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;hadoop-tuning&#34; href=&#34;#hadoop-tuning&#34;&gt;&lt;/a&gt;Hadoop Tuning&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;(口号：&amp;rdquo;简单，易懂，直接，浓缩, 趣味&amp;rdquo;) 痛恨一些技术文档，将一些简单的问题，非要用一些晦涩难懂的语言来描述，或者非要用一些专用语言或缩写，以显得比较专业，却忘记了文档本身的目的是为了更好的让别人理解。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hadoop 安装容易，可使用起来并不容易，需要很多的性能调优方面的工作要做，本文就是知识总结&lt;/p&gt;&#xA;&#xA;&lt;p&gt;以下的应用场景是两台1G内存的单核Amazon服务器&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;mapred-site.xml&#34; href=&#34;#mapred-site.xml&#34;&gt;&lt;/a&gt;mapred-site.xml&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mapred.child.java.opts  #  设定jvm的内存数，默认为200M. 一般来说，都是reduce耗费内存比较大，这个选项正是用来设置JVM堆的最大可用内存，但是也不要设置太大，如果超过2G，应该考虑从程序设计角度去优化。&#xA;&#xA;mapreduce.map.memory.mb&#xA;mapreduce.reduce.memory.mb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;Map related&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mapred.min.split.size     &#xA;这个配置项决定了每个 Input Split的最小值，也间接决定了一个Job的map 数目。 Input Split的大小，决定了一个Job拥有多少个map，默认64M每个Split，如果输入的数据量巨大，那么默认的64M的block会有几万甚至几十万的Map Task，集群的网络传输会很大，最严重的是给Job Tracker的调度、队列、内存都会带来很大压力。  &#xA;&#xA;mapred.compress.map.output     &#xA;压缩Map的输出应该作为一个习惯，数据序列化其实效果会更好，无论是磁盘IO还是数据大小，都会明显的降低&#xA;&#xA;io.sort.mb     &#xA;以MB为单位，默认100M，通常来看，这个值太小了。这个选项定义了map输出结果在内存占用buffer的大小，当buffer达到一定阈值，会启动一个后台线程来对buffer的内容进行排序，然后写入本地磁盘(一个spill文件)&#xA;&#xA;io.sort.spill.percent    &#xA;这个值就是上述buffer的阈值，默认是0.8，既80%，当buffer中的数据达到这个阈值，后台线程会起来对buffer中已有的数据进行排序，然后写入磁盘，此时map输出的数据继续往剩余的20% buffer写数据，如果buffer的剩余20%写满，排序还没结束，map task被block等待。&#xA;&#xA;如果你确认map输出的数据基本有序（很少见），排序时间很短，可以将这个阈值适当调高，更理想的，如果你的map输出是有序的数据（基本不可能吧？），那么可以把buffer设的更大，阈值设置为1.&#xA;&#xA;Io.sort.factor     &#xA;同时打开的文件句柄的数量，默认是10    &#xA;当一个map task执行完之后，本地磁盘上(mapred.local.dir)有若干个spill文件，map task最后做的一件事就是执行merge sort，把这些spill文件合成一个文件（partition），有时候我们会自定义partition函数，就是在这个时候被调用的。&#xA;&#xA;mapred.tasktracker.map.tasks.maximum&#xA;一个tasktracker最多可以同时运行的map任务数量   &#xA;默认值：2&#xA;&#xA;优化值：mapred.tasktracker.map.tasks.maximum = cpu数量   &#xA;&#xA;    cpu数量 = 服务器CPU总核数 / 每个CPU的核数   &#xA;    服务器CPU总核数 = more /proc/cpuinfo | grep &#39;processor&#39; | wc -l   &#xA;    每个CPU的核数 = more /proc/cpuinfo | grep &#39;cpu cores&#39;  &#xA;&#xA;mapred.map.tasks     &#xA;默认值：2   &#xA;优化值：CPU数量   &#xA;&#xA;mapred.tasktracker.reduce.tasks.maximum  &#xA;一个task tracker最多可以同时运行的reduce任务数量&#xA;默认值：2    &#xA;优化值： (CPU数量 &amp;gt; 2) ? (CPU数量 * 0.50): 1 （mapr的官方建议）  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;Reduce related&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;io.sort.mb/io.sort.factor/ io.sort.spill.percent     &#xA;其作用和Map阶段的作用一样，都是控制排序时使用内存的大小、句柄数量、阈值大小&#xA;&#xA;mapred.reduce.parallel.copies    &#xA;Reduce copy数据的线程数量，默认值是5&#xA;Reduce到每个完成的Map Task copy数据（通过RPC调用），默认同时启动5个线程到map节点取数据。这个配置还是很关键的，如果你的map输出数据很大，有时候会发现map早就100%了，reduce一直在1% 2%。。。。。。缓慢的变化，那就是copy数据太慢了，5个线程copy 10G的数据，确实会很慢，这时就要调整这个参数了，但是调整的太大，又会事半功倍，容易造成集群拥堵，所以 Job tuning的同时，也是个权衡的过程，你要熟悉你的数据&#xA;&#xA;mapred.job.shuffle.input.buffer.percent&#xA;当指定了JVM的堆内存最大值以后，上面这个配置项就是Reduce用来存放从Map节点取过来的数据所用的内存占堆内存的比例，默认是0.7，既70%，&#xA;&#xA;mapred.job.shuffle.merge.percent(默认值0.66)&#xA;&#xA;mapred.inmem.merge.threshold(默认值1000)&#xA;&#xA;mapred.reduce.tasks   &#xA;一个Job会使用task tracker的reduce任务槽数量&#xA;默认值：1&#xA;优化值：0.95 * mapred.tasktracker.tasks.maximum&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;疑难问题&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Map and Reduce代码中不要用sys print. 这个动作会消耗大量的资源，造成问题&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;参考&#34; href=&#34;#参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://hadoop.apache.org/common/docs/r0.20.205.0/mapred-default.html&#34;&gt;Hadoop Mapreduce default value&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>